<ModelBehaviors>
    <Template Name="RobSim_AUTOPILOT_Push_FlightDirector_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<FD_TOGGLE_CONDITION>1</FD_TOGGLE_CONDITION>
		</Parameters>
		<Parameters Type="Default">
			<DEFAULT_NAME>FlightDirector</DEFAULT_NAME>
			<Condition Check="TOGGLEABLE">
				<True>
					<ANIM_CODE>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) 100 *</ANIM_CODE>
				</True>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<LEFT_SINGLE_CODE> (&gt;B:AUTOPILOT_FD_1_Mode_Toggle) (&gt;H:B777_FMC_1_AP_FD_TOGGLE)</LEFT_SINGLE_CODE>
			<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#</EMISSIVE_SIMVAR_ACTIVE>
			<SIMVAR_TO_WATCH_0>AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#</SIMVAR_TO_WATCH_0>
			<Condition Valid="ON_WHEN_AP_MODE_TURNED_ON">
				<SIMVAR_TO_WATCH_1>AUTOPILOT MASTER</SIMVAR_TO_WATCH_1>
				<GET_INIT_STATE_EXTERNAL>
					(A:AUTOPILOT MASTER, Bool) (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) or sp0
					l0 (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) ! and if{ #ID# (&gt;K:TOGGLE_FLIGHT_DIRECTOR) } l0
				</GET_INIT_STATE_EXTERNAL>
				<ON_STATE_CHANGED_NEW_STATE_TO_POS_EXTERNAL>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool)</ON_STATE_CHANGED_NEW_STATE_TO_POS_EXTERNAL>
			</Condition>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) sp0</GET_STATE_EXTERNAL>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<SET_STATE_EXTERNAL>#FD_TOGGLE_CONDITION# if{ #ID# (&gt;K:TOGGLE_FLIGHT_DIRECTOR)}</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_FLIGHTDIRECTOR_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_FLIGHTDIRECTOR_TITLE</TOOLTIP_TITLE>
			<BTN_ID>FD_#ID#_Mode</BTN_ID>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Localizer_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Localizer</DEFAULT_NAME>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<EMISSIVE_CODE_ACTIVE>(L:AP_LOC_ARMED, Bool) (L:AP_APP_ARMED, Bool) ! and</EMISSIVE_CODE_ACTIVE>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and sp0</GET_STATE_EXTERNAL>
			<!-- To APPROACH and LOCALIZER are the same as far as toggling, so has to toggle twice if already active from other mode -->
			<SET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and if{ (&gt;H:B777_FMC_1_AP_LOC_ARMED) } (&gt;H:B777_FMC_1_AP_LOC_ARMED)</SET_STATE_EXTERNAL>
			<BTN_ID>Localizer_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_LOC_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_LOC_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Approach_Template">
		<Parameters Type="Default">
			<MAX_BANK_DEGREES>30</MAX_BANK_DEGREES>
			<DEFAULT_NAME>Approach</DEFAULT_NAME>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="DISABLE_GPS_MODE">
				<True>
					<GPS_DISABLE_CODE>(A:GPS DRIVES NAV1, Bool) if{ (A:GPS APPROACH APPROACH TYPE, Enum) 4 == if{ (&gt;K:TOGGLE_GPS_DRIVES_NAV1) } } els{ (A:GPS APPROACH APPROACH TYPE, Enum) 10 == if{ (&gt;K:TOGGLE_GPS_DRIVES_NAV1) } }</GPS_DISABLE_CODE>
				</True>
				<False>
					<GPS_DISABLE_CODE/>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<EMISSIVE_CODE_ACTIVE>(L:AP_APP_ARMED, Bool)</EMISSIVE_CODE_ACTIVE>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#GPS_DISABLE_CODE# (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (&gt;H:B777_FMC_1_AP_APP_ARMED) } (&gt;H:B777_FMC_1_AP_APP_ARMED)</SET_STATE_EXTERNAL>
			<BTN_ID>Approach_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_APPROACH_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_APPROACH_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Vertical_Navigation_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>VerticalNavigation</DEFAULT_NAME>
			<ON_VNAV_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Default>
					<EMISSIVE_DEFAULT_NAME>AUTOPILOT_Push_VerticalNavigation_Text</EMISSIVE_DEFAULT_NAME>
				</Default>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_VNAV_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:WT_CJ4_VNAV_ON)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_VNAV_ARMED)</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_VNAV)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(L:XMLVAR_VNAVButtonValue) ! (&gt;L:XMLVAR_VNAVButtonValue)</SET_STATE_EXTERNAL>
					<EMISSIVE_CODE_ACTIVE>(L:XMLVAR_VNAVButtonValue)</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(L:XMLVAR_VNAVButtonValue)</IS_SWITCH_ON>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>VNAV_Mode</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_VERTICALNAVIGATION_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_VERTICALNAVIGATION_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Navigation_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Navigation</DEFAULT_NAME>
			<ON_NAV_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_NAV_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_LNAV_ARMED)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_LNAV_ARMED)</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_LNAV)</SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_L_NAVIGATION_ACTION_SET</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_L_NAVIGATION_TITLE</TOOLTIP_TITLE>
					<BTN_ID>LNAV_Mode</BTN_ID>
					<LOCAL_VAR_TO_WATCH_0>AP_LNAV_ARMED</LOCAL_VAR_TO_WATCH_0>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_NAV1_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT NAV1 LOCK, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT NAV1 LOCK</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT NAV1 LOCK</EMISSIVE_SIMVAR_ACTIVE>
					<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_NAVIGATION_ACTION_SET</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_NAVIGATION_TITLE</TOOLTIP_TITLE>
					<BTN_ID>NAV_Mode</BTN_ID>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_FlightLevelChange_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>FlightLevelChange</DEFAULT_NAME>
			<ON_FLC_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_FLC_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_FLCH_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_FLCH_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_FLCH)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (&gt;K:AP_SPD_VAR_SET)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT FLIGHT LEVEL CHANGE</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT FLIGHT LEVEL CHANGE</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>FLC_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_FLIGHTLEVELCHANGE_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_FLIGHTLEVELCHANGE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_VerticalSpeed_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>VerticalSpeed</DEFAULT_NAME>
			<ON_VS_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_VS_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_VS_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_VS_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_VSPEED)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_PANEL_VS_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT VERTICAL HOLD, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT VERTICAL HOLD</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT VERTICAL HOLD</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>VS_Mode</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_VERTICALSPEED_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_VERTICALSPEED_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Push_Altitude_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Altitude</DEFAULT_NAME>
			<ON_ALTITUDE_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_ALTITUDE_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_ALT_HOLD_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_ALT_HOLD_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_ALT_HOLD)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_ALT_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT ALTITUDE LOCK, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT ALTITUDE LOCK</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT ALTITUDE LOCK</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>Altitude_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Speed_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Speed</DEFAULT_NAME>
			<IS_MACH_CODE>0</IS_MACH_CODE>
			<ON_SPEED_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
					<EMISSIVE_CODE_ACTIVE>(L:AP_SPD_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(L:AP_SPD_ACTIVE)</IS_SWITCH_ON>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
					<EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT THROTTLE ARM, Bool) (A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or and</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(A:AUTOPILOT THROTTLE ARM, Bool) (A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or and</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT AIRSPEED HOLD</SIMVAR_TO_WATCH_0>
					<SIMVAR_TO_WATCH_1>AUTOPILOT MACH HOLD</SIMVAR_TO_WATCH_1>
					<SIMVAR_TO_WATCH_2>AUTOPILOT THROTTLE ARM</SIMVAR_TO_WATCH_2>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_SPEED_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_SPD)</SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_AUTOPILOT_PUSH_SPEED_ACTION</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AIRLINER_AUTOPILOT_PUSH_SPEED_TITLE</TOOLTIP_TITLE>
					<BTN_ID>IAS_Mode</BTN_ID>
				</True>
				<False>
					<SET_STATE_EXTERNAL>#IS_MACH_CODE# if{ (&gt;K:AP_PANEL_MACH_HOLD) } els{ (&gt;K:AP_PANEL_SPEED_HOLD) }</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT AIRSPEED HOLD</SIMVAR_TO_WATCH_0>
					<SIMVAR_TO_WATCH_1>AUTOPILOT MACH HOLD</SIMVAR_TO_WATCH_1>
					<EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or</EMISSIVE_CODE_ACTIVE>
					<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_ACTION_SET</TT_DESCRIPTION_ID>
					<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
					<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_TITLE</TOOLTIP_TITLE>
					<BTN_ID>Speed_Mode</BTN_ID>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
		</UseTemplate>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Push_Heading_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Heading</DEFAULT_NAME>
			<ON_HEADING_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B777</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_HEADING_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_HEADING_HOLD_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_HEADING_HOLD_ACTIVE)</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_HEADING_HOLD)</SET_STATE_EXTERNAL>
					<LOCAL_VAR_TO_WATCH_0>AP_HEADING_HOLD_ACTIVE</LOCAL_VAR_TO_WATCH_0>
					<BINDING_SET_0_EVENT_ID>AP_HDG_HOLD</BINDING_SET_0_EVENT_ID>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_PANEL_HEADING_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT HEADING LOCK, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT HEADING LOCK</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT HEADING LOCK</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<BTN_ID>Heading_Mode</BTN_ID>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_HEADING_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_HEADING_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Heading_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>RobSim_AUTOPILOT_Knob_Heading_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Heading_SubTemplate">
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<ANIM_NAME_KNOB>AUTOPILOT_Knob_Heading#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>AUTOPILOT_Knob_Heading_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
			<ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_Heading_PushPull#SUFFIX_ID#</ANIM_NAME_PUSHPULL>
			<PART_ID>AUTOPILOT_Knob_Heading</PART_ID>
			<NODE_ID>AUTOPILOT_Knob_Heading#SUFFIX_ID#</NODE_ID>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			<WWISE_EVENT>autopilot_heading_knob</WWISE_EVENT>
			<COUNT>36</COUNT>
			<THRESHOLD_X_INPUT>0.01</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.001</THRESHOLD_X_MOUSE>
			<THRESHOLD_INPUT>0.01</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.001</THRESHOLD_MOUSE>
			<Condition Check="PUSH">
				<TYPE>PUSH</TYPE>
			</Condition>
			<Switch Param="TYPE">
				<Case Value="AIRBUS">
					<HEADING_INDEX>3</HEADING_INDEX>
				</Case>
				<Default>
					<HEADING_INDEX>1</HEADING_INDEX>
				</Default>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<KNOB_ID>Heading</KNOB_ID>
			<Switch Param="TYPE">
				<Case Value="PUSH">
					<SET_STATE_EXTERNAL>1 -1 p0 0 &gt; ? sp0 #HEADING_INDEX# (A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Heading_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(A:HEADING INDICATOR, degrees) (&gt;K:HEADING_BUG_SET)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SET_PUSH</TT_DESCRIPTION_ID_BTN>
				</Case>
				<Case Value="AIRBUS">
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0 
						#HEADING_INDEX# (A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)
						p0 0 &gt; if{ (&gt;H:A320_Neo_CDU_AP_INC_HEADING) } els{ (&gt;H:A320_Neo_CDU_AP_DEC_HEADING) }
					</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH_PULL</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_PULL>Heading_Selected</BTN_ID_PULL>
					<BTN_ID_PUSH>Heading_Managed</BTN_ID_PUSH>
					<DEFAULT_BINDING_STR>Select</DEFAULT_BINDING_STR>
					<PULL_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_SELECTED_HEADING)</PULL_SET_STATE_EXTERNAL>
					<PUSH_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_MANAGED_HEADING)</PUSH_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_PULL>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SLT</TT_DESCRIPTION_ID_PULL>
					<TT_DESCRIPTION_ID_PUSH>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_MAN</TT_DESCRIPTION_ID_PUSH>
				</Case>
				<Case Value="B777">
					<SET_STATE_EXTERNAL>1 -1 p0 0 &gt; ? sp0 #HEADING_INDEX# (A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Heading_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(&gt;H:B777_FMC_1_AP_HEADING_SEL)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SET_PUSH</TT_DESCRIPTION_ID_BTN>
				</Case>
				<Case Value="AS01B">
					<SET_STATE_EXTERNAL>1 -1 p0 0 &gt; ? sp0 #HEADING_INDEX# (A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Heading_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(&gt;H:AS01B_FMC_1_AP_HEADING_SEL)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SET_PUSH</TT_DESCRIPTION_ID_BTN>
				</Case>
				<Default>
					<ANIM_NAME>#ANIM_NAME_KNOB#</ANIM_NAME>
					<SET_STATE_EXTERNAL>1 -1 p0 0 &gt; ? sp0 #HEADING_INDEX# (A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)</SET_STATE_EXTERNAL>
				</Default>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH_PULL">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PULL#</BTN_ID>
						<EVENT_TYPE>PULL</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PULL_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PULL#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PULL_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PULL_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PUSH#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PUSH#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
				</Case>
				<Case Value="PUSH">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BTN#</TT_DESCRIPTION_ID>
					</UseTemplate>
				</Case>
			</Switch>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SET_ADJUST</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_HEADING_TITLE</TOOLTIP_TITLE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT HEADING LOCK DIR:#HEADING_INDEX#, degrees) sp0</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>l0 '%d°' @sprintf</FORMAT_VALUE>
				<Switch Param="ADDITIONAL_EVENT_TYPE">
					<Case Value="PUSH_PULL">
						<TEMPLATE_VARIANT>_PushPull</TEMPLATE_VARIANT>
						<PULL_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#_#DEFAULT_BINDING_STR#)</PULL_CODE>
						<PUSH_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#_#DEFAULT_BINDING_STR#)</PUSH_CODE>
						<TOOLTIP_ENTRY_1>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#</TOOLTIP_ENTRY_1>
						<TOOLTIP_ENTRY_2>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#</TOOLTIP_ENTRY_2>
					</Case>
				</Switch>
			</UseTemplate>
		</Component>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Baro_Template">
    	<DefaultTemplateParameters>
    		<ID>1</ID>
    		<ANIMREF_ID>-1</ANIMREF_ID>
    		<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_INCREASE</ANIMTIP_0>
    		<ANIMTIP_0_ON_CURSOR>TurnRight</ANIMTIP_0_ON_CURSOR>
    		<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_DECREASE</ANIMTIP_1>
    		<ANIMTIP_1_ON_CURSOR>TurnLeft</ANIMTIP_1_ON_CURSOR>
    		<ANIMTIP_2>TT:COCKPIT.TOOLTIPS.BARO_REF_SET_STD</ANIMTIP_2>
    		<ANIMTIP_2_ON_CURSOR>DownArrow</ANIMTIP_2_ON_CURSOR>
    		<ANIMTIP_3>TT:COCKPIT.TOOLTIPS.BARO_ENABLE_SELECTION</ANIMTIP_3>
    		<ANIMTIP_3_ON_CURSOR>UpArrow</ANIMTIP_3_ON_CURSOR>
    		<ANIMTIP_4>TT:COCKPIT.TOOLTIPS.BARO_REF_SET_STD</ANIMTIP_4>
    		<ANIMTIP_4_ON_CURSOR>Hand</ANIMTIP_4_ON_CURSOR>
    	</DefaultTemplateParameters>

    	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
    		<TEMPLATE_TO_CALL>RobSim_AUTOPILOT_Knob_Baro_SubTemplate1</TEMPLATE_TO_CALL>
    	</UseTemplate>
    </Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Baro_SubTemplate1">
	    <DefaultTemplateParameters>
	    	<NODE_ID>AUTOPILOT_Knob_Baro_#ID##SUFFIX_ID#</NODE_ID>
	    	<ANIM_NAME>AUTOPILOT_Knob_Baro_#ID##SUFFIX_ID#</ANIM_NAME>
	    	<PART_ID>AUTOPILOT_Knob_Baro</PART_ID>
	    	<ANIMREF_ID>-1</ANIMREF_ID>
	    	<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_INCREASE</ANIMTIP_0>
	    	<ANIMTIP_0_ON_CURSOR>TurnRight</ANIMTIP_0_ON_CURSOR>
	    	<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_DECREASE</ANIMTIP_1>
	    	<ANIMTIP_1_ON_CURSOR>TurnLeft</ANIMTIP_1_ON_CURSOR>

	    </DefaultTemplateParameters>
	    <Component ID="#NODE_ID#" Node="#NODE_ID#">
	    	<UseTemplate Name="RobSim_AUTOPILOT_Knob_Baro_SubTemplate2">
	    	</UseTemplate>
	    </Component>
	</Template>

	<Template Name="RobSim_AUTOPILOT_Knob_Baro_SubTemplate2">
	    <DefaultTemplateParameters>
	    	<BARO_ID>#ID#</BARO_ID>
	    	<ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
	    	<ANIM_NAME_PUSH>AUTOPILOT_Knob_Baro_#ID#_push#SUFFIX_ID#</ANIM_NAME_PUSH>
	    	<Switch Param="AIRLINER_TYPE">
	    		<Case Value="A320">
	    			<MODE_BARO>0</MODE_BARO>
	    			<MODE_QNH>1</MODE_QNH>
	    			<MODE_STD>2</MODE_STD>
	    			<ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_Baro_#ID#_pushpull#SUFFIX_ID#</ANIM_NAME_PUSHPULL>
	    		</Case>
	    	</Switch>
	    	<Condition Valid="USE_PUSH_STD">
	    		<PUSH/>
	    	</Condition>
	    </DefaultTemplateParameters>

	    <Switch>
	    	<Case Check="PUSH">
	    		<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
	    			<ANTICLOCKWISE_CODE>#BARO_ID# (&gt;K:KOHLSMAN_DEC) (&gt;H:AP_BARO_DEC)</ANTICLOCKWISE_CODE>
	    			<CLOCKWISE_CODE>#BARO_ID# (&gt;K:KOHLSMAN_INC) (&gt;H:AP_BARO_INC)</CLOCKWISE_CODE>
	    			<LEFT_SINGLE_CODE>#BARO_ID# (&gt;K:BAROMETRIC)</LEFT_SINGLE_CODE>
	    			<WWISE_EVENT>autopilot_knob_turn</WWISE_EVENT>
	    			<COUNT>36</COUNT>
	    			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
	    			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
	    			<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
	    			<THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
	    			<THRESHOLD_INPUT>0.05</THRESHOLD_INPUT>
	    			<THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
	    		</UseTemplate>
	    	</Case>
	    	<Case Check="AIRLINER_TYPE">
	    		<Switch Param="AIRLINER_TYPE">
	    			<Case Value="A320">
	    				<UseTemplate Name="ASOBO_GT_Knob_Infinite_PushPull">
	    					<ANTICLOCKWISE_CODE>
	    						#BARO_ID# (&gt;K:KOHLSMAN_DEC) (&gt;H:AP_BARO_Down)
	    					</ANTICLOCKWISE_CODE>
	    					<CLOCKWISE_CODE>
	    						#BARO_ID# (&gt;K:KOHLSMAN_INC) (&gt;H:AP_BARO_Up)
	    					</CLOCKWISE_CODE>
	    					<CLOCKWISE_CONDITION>(L:XMLVAR_Baro#BARO_ID#_Mode) #MODE_STD# !=</CLOCKWISE_CONDITION>
	    					<ANTICLOCKWISE_CONDITION>(L:XMLVAR_Baro#BARO_ID#_Mode) #MODE_STD# !=</ANTICLOCKWISE_CONDITION>
	    					<PULL_CODE>
	    						#MODE_STD# (&gt;L:XMLVAR_Baro#BARO_ID#_Mode)
	    					</PULL_CODE>
	    					<PUSH_CODE>
	    						(L:XMLVAR_Baro#BARO_ID#_Mode) #MODE_STD# == if{ #MODE_BARO# (&gt;L:XMLVAR_Baro#BARO_ID#_Mode) } els{ (L:XMLVAR_Baro#BARO_ID#_Mode) ! (&gt;L:XMLVAR_Baro#BARO_ID#_Mode) }
	    					</PUSH_CODE>
	    					<CENTER_RADIUS>0</CENTER_RADIUS>
	    					<OVERRIDE_PUSH_ANIM_CODE>0 100 (L:XMLVAR_Baro#BARO_ID#_Mode) #MODE_STD# == ? 50 (O:_PushAnimVar) ?</OVERRIDE_PUSH_ANIM_CODE>
	    					<WWISE_EVENT>autopilot_selector_knob</WWISE_EVENT>
	    					<COUNT>36</COUNT>
	    					<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
	    					<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
	    				</UseTemplate>
	    			</Case>
	    			<Default>
	    				<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
	    					<ANTICLOCKWISE_CODE>
	    						#BARO_ID# (&gt;H:B777_PFD_BARO_DEC)
	    					</ANTICLOCKWISE_CODE>
	    					<CLOCKWISE_CODE>
	    						#BARO_ID# (&gt;H:B777_PFD_BARO_INC)
	    					</CLOCKWISE_CODE>
	    					<LEFT_SINGLE_CODE>
	    						(L:XMLVAR_Baro#BARO_ID#_ForcedToSTD) ! (&gt;L:XMLVAR_Baro#BARO_ID#_ForcedToSTD)
	    						(L:XMLVAR_Baro#BARO_ID#_ForcedToSTD) if{
	    							(A:KOHLSMAN SETTING MB:1, mbars) 16 * (&gt;L:XMLVAR_Baro#BARO_ID#_SavedPressure)
	    							#BARO_ID# (&gt;K:BAROMETRIC_STD_PRESSURE)
	    						} els{
	    							#BARO_ID# (L:XMLVAR_Baro#BARO_ID#_SavedPressure) (&gt;K:2:KOHLSMAN_SET) (&gt;H:B777_PFD_STD_PUSH)
	    						}
	    					</LEFT_SINGLE_CODE>
	    					<WWISE_EVENT>autopilot_selector_knob</WWISE_EVENT>
	    					<COUNT>36</COUNT>
	    					<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
	    					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
	    					<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
	    					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
	    				</UseTemplate>
	    			</Default>
	    		</Switch>
	    	</Case>
	    	<Default>
	    		<UseTemplate Name="ASOBO_GT_Knob_Infinite">
	    			<ANTICLOCKWISE_CODE>#BARO_ID# (&gt;K:KOHLSMAN_DEC)</ANTICLOCKWISE_CODE>
	    			<CLOCKWISE_CODE>#BARO_ID# (&gt;K:KOHLSMAN_INC)</CLOCKWISE_CODE>
	    			<WWISE_EVENT>autopilot_knob</WWISE_EVENT>
	    			<COUNT>36</COUNT>
	    		</UseTemplate>
	    	</Default>
	    </Switch>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Push_SpeedToggle_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>SpeedToggle</DEFAULT_NAME>
			<ON_SPEEDUNITS_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<SET_STATE_EXTERNAL>(L:AP_SPEED_INTERVENTION_ACTIVE) (L:AP_VNAV_ACTIVE) ! or if{ (L:XMLVAR_AirSpeedIsInMach) ! (&gt;L:XMLVAR_AirSpeedIsInMach) }</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(L:XMLVAR_AirSpeedIsInMach)</IS_SWITCH_ON>
				</Case>
				<Case Value="AIRBUS">
					<SET_STATE_EXTERNAL>(&gt;K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)</SET_STATE_EXTERNAL>
					<EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool)</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT MANAGED SPEED IN MACH</SIMVAR_TO_WATCH_0>
				</Case>
				<Default>
					<SET_STATE_EXTERNAL>(L:XMLVAR_AirSpeedIsInMach) ! (&gt;L:XMLVAR_AirSpeedIsInMach)</SET_STATE_EXTERNAL>
					<EMISSIVE_CODE_ACTIVE>(L:XMLVAR_AirSpeedIsInMach)</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(L:XMLVAR_AirSpeedIsInMach)</IS_SWITCH_ON>
				</Default>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_SPEEDUNITS_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_SPEEDTOGGLE_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_SPEEDTOGGLE_ACTION</TT_DESCRIPTION_ID>
			<BTN_ID>SpeedToggle_Mode</BTN_ID>
			<STR_STATE_OFF>Knots</STR_STATE_OFF>
			<STR_STATE_ON>Mach</STR_STATE_ON>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_KNTOS)</TT_VALUE_OFF>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_MACH)</TT_VALUE_ON>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_SpeedMach_Template">
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<ANIM_NAME>AUTOPILOT_Knob_SpeedMach</ANIM_NAME>
			<PART_ID>AUTOPILOT_Knob_SpeedMach</PART_ID>
			<NODE_ID>AUTOPILOT_Knob_SpeedMach</NODE_ID>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<WWISE_EVENT>autopilot_speed_knob</WWISE_EVENT>
			<COUNT>36</COUNT>
			<MACH_INCREMENT>0.01</MACH_INCREMENT>
			<KNOTS_INCREMENT>1</KNOTS_INCREMENT>
			<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.005</THRESHOLD_X_MOUSE>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="AIRBUS">
					<TYPE>AIRLINER_PUSH</TYPE>
					<ON_SPEED_INC>(&gt;H:A320_Neo_CDU_AP_INC_SPEED)</ON_SPEED_INC>
					<ON_SPEED_DEC>(&gt;H:A320_Neo_CDU_AP_DEC_SPEED)</ON_SPEED_DEC>
					<ADDITIONAL_EVENT_TYPE>PUSH_PULL</ADDITIONAL_EVENT_TYPE>
					<DEFAULT_BINDING_STR>Mode</DEFAULT_BINDING_STR>
					<BTN_ID_PULL>Speed_Selected</BTN_ID_PULL>
					<BTN_ID_PUSH>Speed_Managed</BTN_ID_PUSH>
					<PULL_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_SELECTED_SPEED)</PULL_SET_STATE_EXTERNAL>
					<PUSH_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_MANAGED_SPEED)</PUSH_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_PULL>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION_SLT</TT_DESCRIPTION_ID_PULL>
					<TT_DESCRIPTION_ID_PUSH>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION_MAN</TT_DESCRIPTION_ID_PUSH>
				</Case>
				<Case Value="B777">
					<TYPE>AIRLINER_PUSH</TYPE>
					<AIRLINER_ID>B777</AIRLINER_ID>
				</Case>
				<Case Value="AS01B">
					<TYPE>AIRLINER_PUSH</TYPE>
					<AIRLINER_ID>AS01B</AIRLINER_ID>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Default">
			<Switch Param="TYPE">
				<Case Value="PUSH">
					<AIRSPEED_IS_IN_MACH>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool)</AIRSPEED_IS_IN_MACH>
					<INCREMENT_INDEX>1</INCREMENT_INDEX>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
					<BTN_SET_STATE_EXTERNAL>(&gt;K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)</BTN_SET_STATE_EXTERNAL>
					<BTN_ID_EXTERNAL>SpeedMach_Mode</BTN_ID_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION_SET_UNITS</TT_DESCRIPTION_ID_BTN>
					<TT_VALUE_BTN>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (R:1:@TT_Package.GT_STATE_MACH) } els{ (R:1:@TT_Package.GT_STATE_KNTOS) }</TT_VALUE_BTN>
					<TT_VALUE_BTN_IS_DYNAMIC>True</TT_VALUE_BTN_IS_DYNAMIC>
				</Case>
				<Case Value="AIRLINER_PUSH">
					<AIRSPEED_IS_IN_MACH>(L:XMLVAR_AirSpeedIsInMach)</AIRSPEED_IS_IN_MACH>
					<INCREMENT_INDEX>1</INCREMENT_INDEX>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
					<Condition Check="AIRLINER_ID">
						<BTN_SET_STATE_EXTERNAL>(&gt;H:#AIRLINER_ID#_FMC_1_AP_SPEED_INTERVENTION)</BTN_SET_STATE_EXTERNAL>
						<BTN_ID_EXTERNAL>SpeedMach_Mode</BTN_ID_EXTERNAL>
						<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION_SET_INTERVENTION</TT_DESCRIPTION_ID_BTN>
					</Condition>
				</Case>
				<Default>
					<AIRSPEED_IS_IN_MACH>(L:XMLVAR_AirSpeedIsInMach)</AIRSPEED_IS_IN_MACH>
					<INCREMENT_INDEX>0</INCREMENT_INDEX>
				</Default>
			</Switch>
		</Parameters>
		<Parameters Type="Default">
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH">
					<ANIM_NAME_PUSH>AUTOPILOT_Knob_SpeedMach_Push</ANIM_NAME_PUSH>
				</Case>
				<Case Value="PUSH_PULL">
					<ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_SpeedMach_Push</ANIM_NAME_PUSHPULL>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<SET_STATE_EXTERNAL>
				1 -1 p0 0 &gt; ? sp0
				#AIRSPEED_IS_IN_MACH# if{
				#INCREMENT_INDEX# (A:AUTOPILOT MACH HOLD VAR:#INCREMENT_INDEX#, mach) #MACH_INCREMENT# l0 * + 100 * (&gt;K:2:AP_MACH_VAR_SET)
				} els{
				#INCREMENT_INDEX# (A:AUTOPILOT AIRSPEED HOLD VAR:#INCREMENT_INDEX#, knots) #KNOTS_INCREMENT# l0 * + 0 max (&gt;K:2:AP_SPD_VAR_SET)
				}
			</SET_STATE_EXTERNAL>
			<Condition Valid="BTN_SET_STATE_EXTERNAL">
				<True>
					<Condition NotEmpty="ON_SPEED_PUSH">
						<BTN_SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL# #ON_SPEED_PUSH#</BTN_SET_STATE_EXTERNAL>
					</Condition>
				</True>
			</Condition>
		</Parameters>
		<Parameters Type="Override">
			<Condition>
				<Test>
					<And>
						<Arg NotEmpty="ON_SPEED_DEC"/>
						<Arg NotEmpty="ON_SPEED_INC"/>
					</And>
				</Test>
				<True>
					<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# p0 0 &gt; if{ #ON_SPEED_INC# } els{ #ON_SPEED_DEC# }</SET_STATE_EXTERNAL>
				</True>
			</Condition>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="SPEED_SET_CONDITION">
				<SET_STATE_EXTERNAL>#SPEED_SET_CONDITION# if{ #SET_STATE_EXTERNAL# }</SET_STATE_EXTERNAL>
			</Condition>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH_PULL">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PULL#</BTN_ID>
						<EVENT_TYPE>PULL</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PULL_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PULL#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PULL_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PULL_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PUSH#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PUSH#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
				</Case>
				<Case Value="PUSH">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BTN#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_BTN_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_BTN_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
						<Condition NotEmpty="TT_VALUE_BTN">
							<TT_VALUE>#TT_VALUE_BTN#</TT_VALUE>
							<Condition NotEmpty="TT_VALUE_BTN_IS_DYNAMIC">
								<TT_VALUE_IS_DYNAMIC>#TT_VALUE_BTN_IS_DYNAMIC#</TT_VALUE_IS_DYNAMIC>
							</Condition>
						</Condition>
					</UseTemplate>
				</Case>
			</Switch>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_TITLE</TOOLTIP_TITLE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT AIRSPEED HOLD VAR:#INCREMENT_INDEX#, knots) sp0 (A:AUTOPILOT MACH HOLD VAR:#INCREMENT_INDEX#, mach) sp1</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>#AIRSPEED_IS_IN_MACH# if{ l1 'Mach %.2f' @sprintf } els{ l0 '%d kt.' @sprintf }</FORMAT_VALUE>
				<Switch Param="ADDITIONAL_EVENT_TYPE">
					<Case Value="PUSH_PULL">
						<TEMPLATE_VARIANT>_PushPull</TEMPLATE_VARIANT>
						<PULL_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#_#DEFAULT_BINDING_STR#)</PULL_CODE>
						<PUSH_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#_#DEFAULT_BINDING_STR#)</PUSH_CODE>
						<TOOLTIP_ENTRY_1>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#</TOOLTIP_ENTRY_1>
						<TOOLTIP_ENTRY_2>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#</TOOLTIP_ENTRY_2>
					</Case>
				</Switch>
				<KNOB_ID>Speed</KNOB_ID>
			</UseTemplate>
		</Component>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Push_AutoThrottle_Template">
		<Parameters Type="Default">
			<Condition Valid="ID">
				<True>
					<SIMVAR_ID_SUFFIX>:#ID#</SIMVAR_ID_SUFFIX>
					<IE_ID>#ID#</IE_ID>
				</True>
				<False>
					<SIMVAR_ID_SUFFIX/>
					<ID>0</ID>
					<IE_ID>1</IE_ID>
				</False>
			</Condition>
		</Parameters>
		<Parameters Type="Default">
			<DEFAULT_NAME>AutoThrottle</DEFAULT_NAME>
			<ON_AT_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B777">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<LVAR>XMLVAR_AUTO_THROTTLE_ARM_#ID#_STATE</LVAR>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<LVAR>AS01B_AUTO_THROTTLE_ARM_STATE</LVAR>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_AT_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<SET_STATE_EXTERNAL>(L:#LVAR#) ! (&gt;L:#LVAR#) (L:#LVAR#) (A:AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#, Bool) != if{ #ID# (&gt;K:AUTO_THROTTLE_ARM) }</SET_STATE_EXTERNAL>
					<TOGGLEABLE/>
					<ANIM_CODE>(L:#LVAR#) 100 *</ANIM_CODE>
					<NO_INDICATOR>True</NO_INDICATOR>
					<NO_TEXT_EMISSIVE>True</NO_TEXT_EMISSIVE>
					<LOCAL_VAR_TO_WATCH_0>#LVAR#</LOCAL_VAR_TO_WATCH_0>
				</True>
				<False>
					<SET_STATE_EXTERNAL>
						#ID# (&gt;K:AUTO_THROTTLE_ARM)
						(A:FLAPS HANDLE INDEX, Number) 0 &gt; if{
						(A:DESIGN SPEED VS0, knots) sp1
						} els{
						(A:DESIGN SPEED VS1, knots) sp1
						}
						l1 1.3 * (A:AUTOPILOT AIRSPEED HOLD VAR:0, knots) max (&gt;K:AP_SPD_VAR_SET)
					</SET_STATE_EXTERNAL>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#</EMISSIVE_SIMVAR_ACTIVE>
					<Condition Check="TOGGLEABLE">
						<True>
							<ANIM_CODE>(A:AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#, Bool) 100 *</ANIM_CODE>
						</True>
					</Condition>
				</False>
			</Condition>
			<IS_SWITCH_ON>(A:AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#, Bool)</IS_SWITCH_ON>
			<SIMVAR_TO_WATCH_0>AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#</SIMVAR_TO_WATCH_0>
		</Parameters>
		<Condition Valid="IS_USING_L_VAR_FOR_STATE">
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_CODE>(A:AUTOPILOT THROTTLE ARM#SIMVAR_ID_SUFFIX#, Bool) (&gt;L:#LVAR#)</UPDATE_CODE>
				<UPDATE_ONCE>True</UPDATE_ONCE>
			</UseTemplate>
		</Condition>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>AutoThrottle_#IE_ID#</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_AUTOTHROTTLE_ACTION</TT_DESCRIPTION_ID>
			<TT_DESCRIPTION_INDEX>#IE_ID#</TT_DESCRIPTION_INDEX>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_AUTOTHROTTLE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Altitude_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>RobSim_AUTOPILOT_Knob_Altitude_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>

    <Template Name="RobSim_AUTOPILOT_Knob_Altitude_SubTemplate">
		<Parameters Type="Override">
			<Condition Check="PUSH">
				<TYPE>PUSH</TYPE>
			</Condition>
		</Parameters>
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<PART_ID>AUTOPILOT_Knob_Altitude</PART_ID>
			<Condition Check="INCREMENT">
				<True>
					<NODE_ID>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</ANIM_NAME>
					<Condition Check="TYPE" Match="PUSH">
						<ANIM_NAME_KNOB>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</ANIM_NAME_KNOB>
						<ANIM_NAME_PUSH>AUTOPILOT_Knob_Altitude_#INCREMENT#_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
					</Condition>
					<WWISE_EVENT>autopilot_altitude_#INCREMENT#_knob</WWISE_EVENT>
					<COUNT>36</COUNT>	
					<THRESHOLD_INPUT>0.0001</THRESHOLD_INPUT>
					<THRESHOLD_MOUSE>0.003</THRESHOLD_MOUSE>
					<INCREMENT_IN_KNOB_ID/>
				</True>
				<False>
					<Condition>
						<Test>
							<Or>
								<Arg Check="TYPE" Match="AIRBUS"/>
								<Arg Check="TYPE" Match="AS01B"/>
							</Or>
						</Test>
						<False>
							<IS_DYN_INCREMENT>True</IS_DYN_INCREMENT>
						</False>
					</Condition>
					<Condition Check="INCREMENT">
						<False>
							<INCREMENT_VAR>XMLVAR_Autopilot_Altitude_Increment</INCREMENT_VAR>
						</False>
					</Condition>
					<INCREMENT>(L:XMLVAR_Autopilot_Altitude_Increment)</INCREMENT>
					<SET_INCREMENT>(&gt;L:XMLVAR_Autopilot_Altitude_Increment)</SET_INCREMENT>
					<DYN_INCREMENT_INIT>100</DYN_INCREMENT_INIT>
					<NODE_ID>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</ANIM_NAME>
					<WWISE_EVENT>autopilot_altitude_knob</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
					<THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
					<Switch Param="TYPE">
						<Case Value="AIRBUS">
							<ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_Altitude_PushPull#SUFFIX_ID#</ANIM_NAME_PUSHPULL>
						</Case>
						<Case Value="PUSH">
							<ANIM_NAME_KNOB>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</ANIM_NAME_KNOB>
							<ANIM_NAME_PUSH>AUTOPILOT_Knob_Altitude_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
							<ALT_PUSH_TYPE>ALT_SYNC</ALT_PUSH_TYPE>
						</Case>
					</Switch>
				</False>
			</Condition>
			<Switch Param="TYPE">
				<Case Value="AIRBUS">
					<HEADING_INDEX>3</HEADING_INDEX>
				</Case>
				<Case Value="B777">
					<HEADING_INDEX>3</HEADING_INDEX>
				</Case>
				<Case Value="AS01B">
					<HEADING_INDEX>3</HEADING_INDEX>
				</Case>
				<Default>
					<HEADING_INDEX>0</HEADING_INDEX>
				</Default>
			</Switch>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<Switch Param="ALT_PUSH_TYPE">
				<Case Value="ALT_FINE_TUNE">
					<FINE_TUNE_INCREMENT>100</FINE_TUNE_INCREMENT>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<Condition Check="INCREMENT_IN_KNOB_ID">
				<True>
					<KNOB_ID>Altitude_#INCREMENT#</KNOB_ID>				
				</True>
				<False>
					<KNOB_ID>Altitude</KNOB_ID>		
				</False>
			</Condition>
			<Switch Param="TYPE">
				<Case Value="PUSH">
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0 
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) } els{ (&gt;H:AP_KNOB_Down) }
					</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<Switch Param="ALT_PUSH_TYPE">
						<Case Value="ALT_SYNC">
							<BTN_ID_EXTERNAL>Altitude_Sync</BTN_ID_EXTERNAL>
							<BTN_SET_STATE_EXTERNAL>(A:INDICATED ALTITUDE, feet) (&gt;K:AP_ALT_VAR_SET_ENGLISH) (&gt;H:AP_KNOB)</BTN_SET_STATE_EXTERNAL>
							<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_PUSH</TT_DESCRIPTION_ID_BTN>
						</Case>
						<Case Value="ALT_FINE_TUNE">
							<BTN_ID_EXTERNAL>Altitude_Fine_Tune</BTN_ID_EXTERNAL>
							<BTN_SET_STATE_EXTERNAL>#FINE_TUNE_INCREMENT# #DYN_INCREMENT_INIT# #INCREMENT# #FINE_TUNE_INCREMENT# != ? #SET_INCREMENT#</BTN_SET_STATE_EXTERNAL>
							<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDE_INCREMENT_ACTION</TT_DESCRIPTION_ID_BTN>
							<PUSH_ANIM_HANDLED_SEPARATELY>True</PUSH_ANIM_HANDLED_SEPARATELY>
							<BTN_ANIM_CODE>#INCREMENT# #FINE_TUNE_INCREMENT# == 100 *</BTN_ANIM_CODE>
							<BTN_LOCAL_VAR_TO_WATCH_0>#INCREMENT_VAR#</BTN_LOCAL_VAR_TO_WATCH_0>
							<BTN_VALUE_CODE>#INCREMENT# #FINE_TUNE_INCREMENT# ==</BTN_VALUE_CODE>
							<BTN_TT_VALUE_ON>'100'</BTN_TT_VALUE_ON>
							<BTN_TT_VALUE_OFF>'1000'</BTN_TT_VALUE_OFF>
						</Case>
					</Switch>
				</Case>
				<Case Value="AIRBUS">
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0 
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) (&gt;H:A320_Neo_CDU_AP_INC_ALT) } els{ (&gt;H:AP_KNOB_Down) (&gt;H:A320_Neo_CDU_AP_DEC_ALT) }
					</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH_PULL</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_PULL>Altitude_Selected</BTN_ID_PULL>
					<BTN_ID_PUSH>Altitude_Managed</BTN_ID_PUSH>
					<DEFAULT_BINDING_STR>Mode</DEFAULT_BINDING_STR>
					<PULL_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)</PULL_SET_STATE_EXTERNAL>
					<PUSH_SET_STATE_EXTERNAL>(&gt;H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)</PUSH_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_PULL>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_ACTION_SLT</TT_DESCRIPTION_ID_PULL>
					<TT_DESCRIPTION_ID_PUSH>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_ACTION_MAN</TT_DESCRIPTION_ID_PUSH>
				</Case>
				<Case Value="B777">
					<SET_STATE_EXTERNAL>p0 0 &gt; if{ #HEADING_INDEX# 0 (&gt;K:2:AP_ALT_VAR_INC) (&gt;H:AP_KNOB_Up) } els{ #HEADING_INDEX# 0 (&gt;K:2:AP_ALT_VAR_DEC) (&gt;H:AP_KNOB_Down) }</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Altitude_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(&gt;H:B777_FMC_1_AP_ALT_INTERVENTION)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_PUSH</TT_DESCRIPTION_ID_BTN>
				</Case>
				<Case Value="AS01B">
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0 
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) } els{ (&gt;H:AP_KNOB_Down) }
					</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Altitude_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(&gt;H:AS01B_FMC_1_AP_ALT_INTERVENTION)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_PUSH</TT_DESCRIPTION_ID_BTN>
				</Case>
				<Default>
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0 
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) } els{ (&gt;H:AP_KNOB_Down) }
					</SET_STATE_EXTERNAL>
				</Default>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Condition Valid="IS_DYN_INCREMENT">
				<UseTemplate Name="ASOBO_GT_Update">
					<UPDATE_ONCE>True</UPDATE_ONCE>
					<UPDATE_CODE>#DYN_INCREMENT_INIT# #SET_INCREMENT#</UPDATE_CODE>
				</UseTemplate>
			</Condition>
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH_PULL">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PULL#</BTN_ID>
						<EVENT_TYPE>PULL</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PULL_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PULL#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PULL_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PULL_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PUSH#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PUSH#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
				</Case>
				<Case Value="PUSH">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BTN#</TT_DESCRIPTION_ID>
						<Condition NotEmpty="BTN_VALUE_CODE">
							<VALUE_CODE>#BTN_VALUE_CODE#</VALUE_CODE>
							<TT_VALUE>#BTN_VALUE_CODE# if{ #BTN_TT_VALUE_ON# } els{ #BTN_TT_VALUE_OFF# }</TT_VALUE>
							<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
						</Condition>
						<Condition NotEmpty="BTN_LOCAL_VAR_TO_WATCH_0">
							<LOCAL_VAR_TO_WATCH_0>#BTN_LOCAL_VAR_TO_WATCH_0#</LOCAL_VAR_TO_WATCH_0>
						</Condition>
					</UseTemplate>
					<Condition NotEmpty="PUSH_ANIM_HANDLED_SEPARATELY">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_CODE>#BTN_ANIM_CODE#</ANIM_CODE>
							<ANIM_NAME>#ANIM_NAME_PUSH#</ANIM_NAME>
							<ANIM_LAG>100</ANIM_LAG>
						</UseTemplate>
					</Condition>
				</Case>
			</Switch>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<BINDING_INC_0>Inc_Event</BINDING_INC_0>
				<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
				<BINDING_INC_0_EVENT_ID>AP_ALT_VAR_INC</BINDING_INC_0_EVENT_ID>	
				<BINDING_INC_0_EVENT_ID_ONLY>True</BINDING_INC_0_EVENT_ID_ONLY>	
				<BINDING_DEC_0>Dec_Event</BINDING_DEC_0>
				<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
				<BINDING_DEC_0_EVENT_ID>AP_ALT_VAR_DEC</BINDING_DEC_0_EVENT_ID>	
				<BINDING_DEC_0_EVENT_ID_ONLY>True</BINDING_DEC_0_EVENT_ID_ONLY>	
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_ADJUST</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_TITLE</TOOLTIP_TITLE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) sp0</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>l0 '%d ft' @sprintf</FORMAT_VALUE>
				<Switch Param="ADDITIONAL_EVENT_TYPE">
					<Case Value="PUSH_PULL">
						<TEMPLATE_VARIANT>_PushPull</TEMPLATE_VARIANT>
						<PULL_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#_#DEFAULT_BINDING_STR#)</PULL_CODE>
						<PUSH_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#_#DEFAULT_BINDING_STR#)</PUSH_CODE>
						<TOOLTIP_ENTRY_1>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#</TOOLTIP_ENTRY_1>
						<TOOLTIP_ENTRY_2>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#</TOOLTIP_ENTRY_2>
					</Case>
				</Switch>
			</UseTemplate>
			<Condition Check="EMISSIVE_KNOB">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
			</Condition>
		</Component>
	</Template>
</ModelBehaviors>