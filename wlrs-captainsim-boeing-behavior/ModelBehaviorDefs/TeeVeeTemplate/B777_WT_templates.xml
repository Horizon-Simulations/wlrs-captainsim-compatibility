<ModelBehaviors>
	<Include ModelBehaviorFile="ASOBO\Inputs\Helpers.xml"/>
	<!-- GENERIC-->
	<Template Name="ASOBO_BOEING_Push_CANCRCL_Template">
		<UseTemplate Name="ASOBO_BOEING_Push_HTML_Generic_Template">
			<SYSTEM_NAME>MFD</SYSTEM_NAME>
			<ID_BTN>CANCRCL</ID_BTN>
			<TOOLTIP_TITLE>@TT_Package.CANCEL_RECALL</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.CANCEL_RECALL</TT_DESCRIPTION_ID>
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_Airliner_LVar_Switch_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<SEQ1_NODE_ID>#NODE_ID#_SEQ1</SEQ1_NODE_ID>
			<SEQ2_NODE_ID>#NODE_ID#_SEQ2</SEQ2_NODE_ID>
			<IE_NAME></IE_NAME>
			<NODE_ID></NODE_ID>
			<ANIM_NAME></ANIM_NAME>
			<LVAR></LVAR>
			<IS_AIRLINER>True</IS_AIRLINER>
			<IS_MOMENTARY>False</IS_MOMENTARY>
			<PART_ID>#NODE_ID#</PART_ID>
		</Parameters>
		<Parameters Type="Default">
			<SET_STATE_EXTERNAL>(L:#LVAR#, Bool) ! (&gt;L:#LVAR#)</SET_STATE_EXTERNAL>
			<GET_STATE_EXTERNAL>(L:#LVAR#, Bool)</GET_STATE_EXTERNAL>
			<SEQ1_EMISSIVE_CODE>(L:#LVAR#, Bool)</SEQ1_EMISSIVE_CODE>
			<SEQ2_EMISSIVE_CODE>(L:#LVAR#, Bool) !</SEQ2_EMISSIVE_CODE>
			<TT_VALUE>(L:#LVAR#, Bool) @TT_OnOff_Cond</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
			<WWISE_EVENT_1>fuel_pump_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>fuel_pump_push_button_off</WWISE_EVENT_2>
		</Parameters>
		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<Condition Check="IS_MOMENTARY" Match="True">
				<True>
					<SEQ1_CODE_DRIVES_DOWN_STATE>False</SEQ1_CODE_DRIVES_DOWN_STATE>
				</True>
			</Condition>
			<INTERACTION_TYPE>Push</INTERACTION_TYPE>
			<LOCAL_VAR_TO_WATCH_0>#LVAR#</LOCAL_VAR_TO_WATCH_0>
		</UseTemplate>
	</Template>

	<!-- Battery Switch -->
	<Template Name="WT_B777_Battery_Switch_Template">
		<Parameters Type="Default">
			<MAIN_HOT_BATT_BUS_ID>8</MAIN_HOT_BATT_BUS_ID>
			<APU_HOT_BATT_BUS_ID>9</APU_HOT_BATT_BUS_ID>
			<MAIN_BATT_BUS_ID>2</MAIN_BATT_BUS_ID>
			<APU_BATT_BUS_ID>3</APU_BATT_BUS_ID>

			<NODE_ID>ELECTRICAL_Push_Battery</NODE_ID>
			<ANIM_NAME>ELECTRICAL_Push_Battery</ANIM_NAME>
			<PART_ID>ELECTRICAL_Switch_Battery_Master</PART_ID>

			<WWISE_EVENT_1>battery_switch_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>battery_switch_off</WWISE_EVENT_2>

			<IE_NAME_EXT>Battery_Switch</IE_NAME_EXT>
			<LVAR_NAME>XMLVAR_Battery_Switch_State</LVAR_NAME>
		</Parameters>

		<Parameters Type="Override">
			<FULL_IE_NAME>ELECTRICAL_#IE_NAME_EXT#</FULL_IE_NAME>
			<!--
				Both main and APU batteries should always be on in order to power the hot battery buses.
				The switch toggles the connections between each hot battery bus to its respective battery bus.
			-->
			<UPDATE_STATE>
				1 (&gt;K:MASTER_BATTERY_ON)
				2 (&gt;K:MASTER_BATTERY_ON)

				#MAIN_BATT_BUS_ID# (A:1:BUS CONNECTION ON:#MAIN_HOT_BATT_BUS_ID#, Bool) l0 != if{
					#MAIN_BATT_BUS_ID# #MAIN_HOT_BATT_BUS_ID# (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
				}
				#APU_BATT_BUS_ID# (A:1:BUS CONNECTION ON:#APU_HOT_BATT_BUS_ID#, Bool) l0 != if{
					#APU_BATT_BUS_ID# #APU_HOT_BATT_BUS_ID# (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
				}
			</UPDATE_STATE>
		</Parameters>

		<UseInputEvent ID="ELECTRICAL">
			<BTN_ID>#IE_NAME_EXT#</BTN_ID>
			<INPUT_EVENT_ID_SOURCE>ELECTRICAL</INPUT_EVENT_ID_SOURCE>

			<ON_AFTER_INIT_CODE>
				(O:#FULL_IE_NAME#_Position) sp0 #UPDATE_STATE#
			</ON_AFTER_INIT_CODE>
			<GET_STATE_EXTERNAL>(L:#LVAR_NAME#) sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>
				(O:#FULL_IE_NAME#_Position) s0 (&gt;L:#LVAR_NAME#) #UPDATE_STATE#
			</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LVAR_NAME#</LOCAL_VAR_TO_WATCH_0>

			<TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_BATTERY_MASTER_ACTION_SET</TT_DESCRIPTION_ID>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_ON)</TT_VALUE_ON>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_OFF)</TT_VALUE_OFF>

			<!-- Intercept battery set/toggle key events to set the switch state instead. -->

			<BINDING_SET_3>BATTERY1_SET</BINDING_SET_3>
			<BINDING_SET_3_EVENT_ID>BATTERY1_SET</BINDING_SET_3_EVENT_ID>
			<BINDING_SET_3_EVENT_ID_ONLY>True</BINDING_SET_3_EVENT_ID_ONLY>

			<BINDING_SET_4>MASTER_BATTERY_OFF</BINDING_SET_4>
			<BINDING_SET_4_EVENT_ID>MASTER_BATTERY_OFF</BINDING_SET_4_EVENT_ID>
			<BINDING_SET_4_EVENT_ID_ONLY>True</BINDING_SET_4_EVENT_ID_ONLY>
			<BINDING_SET_4_PARAM_0_IS_DYNAMIC>True</BINDING_SET_4_PARAM_0_IS_DYNAMIC>
			<!-- p1: battery index -->
			<BINDING_SET_4_PARAM_0>
				p1 0 == p1 1 == or if{
					0
				} els{
					(B:#FULL_IE_NAME#)
				}
			</BINDING_SET_4_PARAM_0>

			<BINDING_SET_5>MASTER_BATTERY_ON</BINDING_SET_5>
			<BINDING_SET_5_EVENT_ID>MASTER_BATTERY_ON</BINDING_SET_5_EVENT_ID>
			<BINDING_SET_5_EVENT_ID_ONLY>True</BINDING_SET_5_EVENT_ID_ONLY>
			<BINDING_SET_5_PARAM_0_IS_DYNAMIC>True</BINDING_SET_5_PARAM_0_IS_DYNAMIC>
			<!-- p1: battery index -->
			<BINDING_SET_5_PARAM_0>
				p1 0 == p1 1 == or if{
					1
				} els{
					(B:#FULL_IE_NAME#)
				}
			</BINDING_SET_5_PARAM_0>

			<BINDING_SET_6>MASTER_BATTERY_SET</BINDING_SET_6>
			<BINDING_SET_6_EVENT_ID>MASTER_BATTERY_SET</BINDING_SET_6_EVENT_ID>
			<BINDING_SET_6_EVENT_ID_ONLY>True</BINDING_SET_6_EVENT_ID_ONLY>
			<BINDING_SET_6_PARAM_0_IS_DYNAMIC>True</BINDING_SET_6_PARAM_0_IS_DYNAMIC>
			<!-- p1: toggle flag; p2: battery index -->
			<BINDING_SET_6_PARAM_0>
				p2 0 == p2 1 == or if{
					p1
				} els{
					(B:#FULL_IE_NAME#)
				}
			</BINDING_SET_6_PARAM_0>

			<BINDING_SET_7>TOGGLE_MASTER_BATTERY</BINDING_SET_7>
			<BINDING_SET_7_EVENT_ID>TOGGLE_MASTER_BATTERY</BINDING_SET_7_EVENT_ID>
			<BINDING_SET_7_EVENT_ID_ONLY>True</BINDING_SET_7_EVENT_ID_ONLY>
			<BINDING_SET_7_PARAM_0_IS_DYNAMIC>True</BINDING_SET_7_PARAM_0_IS_DYNAMIC>
			<!-- p1: battery index -->
			<BINDING_SET_7_PARAM_0>
				p1 0 == p1 1 == or if{
					1 0 (B:#FULL_IE_NAME#) 0 == ?
				} els{
					(B:#FULL_IE_NAME#)
				}
			</BINDING_SET_7_PARAM_0>
		</UseInputEvent>

		<UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
			<LEFT_SINGLE_CODE>(&gt;B:#FULL_IE_NAME#_Toggle)</LEFT_SINGLE_CODE>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

			<SEQ1_EMISSIVE_CODE>#MAIN_BATT_BUS_ID# (A:1:BUS CONNECTION ON:#MAIN_HOT_BATT_BUS_ID#, Bool)</SEQ1_EMISSIVE_CODE>
			<SEQ2_EMISSIVE_CODE>#MAIN_BATT_BUS_ID# (A:1:BUS CONNECTION ON:#MAIN_HOT_BATT_BUS_ID#, Bool) !</SEQ2_EMISSIVE_CODE>
			<FAILURE_CIRCUIT>74</FAILURE_CIRCUIT>

			<TOOLTIP_TITLE>@TT_Package.ELECTRICAL_BATTERY_TITLE</TOOLTIP_TITLE>
			<TOOLTIP_ENTRY_0>#FULL_IE_NAME#</TOOLTIP_ENTRY_0>
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_Airliner_Ext_Pwr_Switch_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<NODE_ID>ELECTRICAL_Switch_ExternalPower_FWD_1</NODE_ID>
			<ANIM_NAME>ELECTRICAL_Switch_ExternalPower_FWD_1</ANIM_NAME>
		</Parameters>
		<UseTemplate Name="WT_B777_Airliner_LVar_Switch_Template">
			<IS_MOMENTARY>True</IS_MOMENTARY>
			<IE_NAME>ext_pwr_#ID#</IE_NAME>
			<LVAR>EXT_PWR_COMMANDED:#ID#</LVAR>
			<LEFT_LEAVE_CODE>(&gt;B:AIRLINER_ext_pwr_#ID#_Off)</LEFT_LEAVE_CODE>
			<SEQ2_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (A:EXTERNAL POWER ON:#ID#, Bool) ! and</SEQ2_EMISSIVE_CODE>
			<SEQ1_EMISSIVE_CODE>(A:EXTERNAL POWER ON:#ID#, Bool)</SEQ1_EMISSIVE_CODE>
			<SEQ1_CODE_DRIVES_DOWN_STATE>False</SEQ1_CODE_DRIVES_DOWN_STATE>
			<SEQ1_NOT_DIMMABLE>True</SEQ1_NOT_DIMMABLE>
			<FAILURE>1</FAILURE>
			<WWISE_EVENT_1>externalpower_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>externalpower_push_button_off</WWISE_EVENT_2>
			<TOOLTIP_TITLE>@TT_Package.ELECTRICAL_SWITCH_EXTERNAL_POWER_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_EXTERNAL_POWER_ACTION_SET</TT_DESCRIPTION_ID>
			<TT_VALUE>(A:EXTERNAL POWER ON:#ID#, Bool) @TT_OnOff_Cond</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
			<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
		</UseTemplate>
	</Template>

	<Template Name="teevee_B777_PASSENGER_SIGN_KNOB">
		<Parameters Type="Default">
			<LOCALVAR_TO_WATCH_0></LOCALVAR_TO_WATCH_0>
		</Parameters>
		<UseTemplate Name="Asobo_Interaction_Base_Template">
			<DONT_OVERRIDE_BASE_EMISSIVE>True</DONT_OVERRIDE_BASE_EMISSIVE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>3</NUM_STATES>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<STR_STATE_0>OFF</STR_STATE_0>
			<STR_STATE_1>AUTO</STR_STATE_1>
			<STR_STATE_2>ON</STR_STATE_2>
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<WWISE_EVENT>seatbelts_switch_on</WWISE_EVENT>
			<LOCALVAR_TO_WATCH_0>#LOCALVAR_TO_WATCH_0#</LOCALVAR_TO_WATCH_0>
			<GET_STATE_EXTERNAL>(#LOCALVAR_TO_WATCH_0#) sp0</GET_STATE_EXTERNAL>
			<SET_STATE_0>0 (&gt;#LOCALVAR_TO_WATCH_0#)</SET_STATE_0>
			<SET_STATE_1>1 (&gt;#LOCALVAR_TO_WATCH_0#)</SET_STATE_1>
			<SET_STATE_2>2 (&gt;#LOCALVAR_TO_WATCH_0#)</SET_STATE_2>
			<USE_INPUT_EVENT_ID>AIRLINER</USE_INPUT_EVENT_ID>
			<INPUT_EVENT_ID_SOURCE>AIRLINER</INPUT_EVENT_ID_SOURCE>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_AUTO</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ON</TT_VALUE_2>	
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_PASSENGER_Knob_Template">	<!--temperature knob-->
		<Parameters Type="Default">
			<ID>1</ID>
			<INCREMENT>1</INCREMENT>
			<LOCAL_VAR></LOCAL_VAR>
			<IE></IE>
			<NODE_ID></NODE_ID>
			<INIT_VALUE>0</INIT_VALUE>
		</Parameters>
		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<IE_NAME>#IE#_#ID#</IE_NAME>
			<INPUT_EVENT_ID_SOURCE>PASSENGER</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>PASSENGER</USE_INPUT_EVENT_ID>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>
					p0 (L:#LOCAL_VAR#) &gt; if{
							(L:#LOCAL_VAR#) #INCREMENT# + 100 min (&gt;L:#LOCAL_VAR#)
					} els{
							(L:#LOCAL_VAR#) #INCREMENT# - 0.0 max (&gt;L:#LOCAL_VAR#)
					}
			</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<COUNT>100</COUNT>
			<WWISE_EVENT>lighting_knob_generic</WWISE_EVENT>
			<ANIM_NAME>#NODE_ID#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>
				#INIT_VALUE# (&gt;L:#LOCAL_VAR#)
			</UPDATE_CODE>
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_CONTRAST_Knob_Template">	<!--MFD/PFD contrast and brightness knob-->
		<Parameters Type="Default">
			<ID>1</ID>
			<INCREMENT>10</INCREMENT>
			<LOCAL_VAR></LOCAL_VAR>
			<IE>Screen_Contrast</IE>
			<NODE_ID></NODE_ID>
			<ANIM_NAME></ANIM_NAME>
			<INIT_VALUE>100</INIT_VALUE>
		</Parameters>
		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<IE_NAME>#IE#_#ID#</IE_NAME>
			<INPUT_EVENT_ID_SOURCE>AIRLINER</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>AIRLINER</USE_INPUT_EVENT_ID>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>
				p0 (L:#LOCAL_VAR#) &gt; if{
						(L:#LOCAL_VAR#) #INCREMENT# + 100 min (&gt;L:#LOCAL_VAR#)
				} els{
						(L:#LOCAL_VAR#) #INCREMENT# - 0.0 max (&gt;L:#LOCAL_VAR#)
				}
			</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<COUNT>100</COUNT>
			<WWISE_EVENT>lighting_knob_generic</WWISE_EVENT>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>
				#INIT_VALUE# (&gt;L:#LOCAL_VAR#)
			</UPDATE_CODE>
		</UseTemplate>
	</Template>

	<Template Name="WT_VOR_ADF_Volume_Knob_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<IE>VOR_ADF_Volume</IE>
			<NODE_ID>AudioPanel_Knob_Volume_Beacon_1</NODE_ID>
			<ANIM_NAME>AudioPanel_Knob_Volume_Beacon_1</ANIM_NAME>
			<PART_ID>AudioPanel_Knob_Volume_Beacon_1</PART_ID>
			<TOOLTIP_TITLE>@TT_Package.BOEING_COM_VOR_ADF_RECEIVER_VOLUME_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION>@TT_Package.BOEING_COM_VOR_ADF_RECEIVER_VOLUME_ACTION</TT_DESCRIPTION>
			<LOCAL_VAR>WT_ADF_VOR_VOLUME</LOCAL_VAR>
			<INCREMENT>5</INCREMENT>
			<INIT_VALUE>0</INIT_VALUE>
		</Parameters>
		<Parameters Type="Default">
			<UPDATE_VOLUMES>
				(L:#LOCAL_VAR#) s0
				l0 (&gt;K:NAV1_VOLUME_SET_EX1)
				l0 (&gt;K:NAV2_VOLUME_SET_EX1)
				l0 (&gt;K:ADF_VOLUME_SET)
				l0 (&gt;K:ADF2_VOLUME_SET)
			</UPDATE_VOLUMES>
		</Parameters>
		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<IE_NAME>#IE#_#ID#</IE_NAME>
			<INPUT_EVENT_ID_SOURCE>AIRLINER</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>AIRLINER</USE_INPUT_EVENT_ID>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>
				p0 (L:#LOCAL_VAR#) &gt; if{
						(L:#LOCAL_VAR#) #INCREMENT# + 100 min (&gt;L:#LOCAL_VAR#)
				} els{
						(L:#LOCAL_VAR#) #INCREMENT# - 0.0 max (&gt;L:#LOCAL_VAR#)
				}
				#UPDATE_VOLUMES#
			</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<COUNT>100</COUNT>
			<WWISE_EVENT>audioreceiver_knob</WWISE_EVENT>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>
				#INIT_VALUE# (&gt;L:#LOCAL_VAR#)
				#UPDATE_VOLUMES#
			</UPDATE_CODE>
		</UseTemplate>
	</Template>

	<Template Name="WT_Approach_Receiver_Volume_Knob_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<IE>Approach_Receiver_Volume</IE>
			<NODE_ID>Audiopanel_Knob_Volume_Approach_1</NODE_ID>
			<ANIM_NAME>Audiopanel_Knob_Volume_Approach_1</ANIM_NAME>
			<PART_ID>Audiopanel_Knob_Volume_Approach_1</PART_ID>
			<TOOLTIP_TITLE>@TT_Package.BOEING_COM_APP_RECEIVER_VOLUME_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION>@TT_Package.BOEING_COM_APP_RECEIVER_VOLUME_ACTION</TT_DESCRIPTION>
			<LOCAL_VAR>WT_APPROACH_RECEIVER_VOLUME</LOCAL_VAR>
			<INCREMENT>5</INCREMENT>
			<INIT_VALUE>0</INIT_VALUE>
		</Parameters>
		<Parameters Type="Default">
			<UPDATE_VOLUMES>
				(L:#LOCAL_VAR#) s0
				l0 (&gt;K:NAV3_VOLUME_SET_EX1)
			</UPDATE_VOLUMES>
		</Parameters>
		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<IE_NAME>#IE#_#ID#</IE_NAME>
			<INPUT_EVENT_ID_SOURCE>AIRLINER</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>AIRLINER</USE_INPUT_EVENT_ID>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>
				p0 (L:#LOCAL_VAR#) &gt; if{
						(L:#LOCAL_VAR#) #INCREMENT# + 100 min (&gt;L:#LOCAL_VAR#)
				} els{
						(L:#LOCAL_VAR#) #INCREMENT# - 0.0 max (&gt;L:#LOCAL_VAR#)
				}
				#UPDATE_VOLUMES#
			</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<COUNT>100</COUNT>
			<WWISE_EVENT>audioreceiver_knob</WWISE_EVENT>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>
				#INIT_VALUE# (&gt;L:#LOCAL_VAR#)
				#UPDATE_VOLUMES#
				1 (&gt;K:RADIO_VOR3_IDENT_SET)
			</UPDATE_CODE>
		</UseTemplate>
	</Template>

	<!-- VOR/ADF Selector Knob -->
	<Template Name="WT_Knob_AudioPanel_Vor_Adf_Selector_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<OVERRIDE_ANIM_CODE>
				(O:XMLVAR_AudioPanel_Knob_VOR_ADF_Selector_1_Animation_Position) s0 100 &lt;= if{
					l0 1.09 *
				} els{
					l0 200 &lt;= if{
						l0 0.91 *
					} els{
						l0
					}
				}
			</OVERRIDE_ANIM_CODE>
			<TT_DESCRIPTION_ID>@TT_Package.BOEING_COM_VOR_ADF_RECEIVER_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.BOEING_COM_VOR_ADF_RECEIVER_TITLE</TOOLTIP_TITLE>
			<LOCAL_VAR>XMLVAR_AUDIOPANEL_KNOB_VOR_ADF_SELECTOR_#ID#</LOCAL_VAR>
		</Parameters>
		<Parameters Type="Default">
			<NODE_ID>AudioPanel_Knob_VOR_ADF_Selector_#ID#</NODE_ID>
			<ANIM_NAME>AudioPanel_Knob_Mode_Beacon_#ID#</ANIM_NAME>
			<IE_NAME>#NODE_ID#</IE_NAME>
			<UPDATE_IDENT_VARS>
				(L:#LOCAL_VAR#) s0
				l0 0 == (&gt;K:RADIO_VOR1_IDENT_SET)
				l0 1 == (&gt;K:RADIO_VOR2_IDENT_SET)
				l0 2 == (&gt;K:RADIO_ADF_IDENT_SET)
				l0 3 == (&gt;K:RADIO_ADF2_IDENT_SET)
			</UPDATE_IDENT_VARS>
		</Parameters>
		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>4</NUM_STATES>
			<STR_STATE_0>VOR_L</STR_STATE_0>
			<STR_STATE_1>VOR_R</STR_STATE_1>
			<STR_STATE_2>ADF_L</STR_STATE_2>
			<STR_STATE_3>ADF_R</STR_STATE_3>
			<TT_VALUE_0>@TT_Package.GT_STATE_VORL</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_VORR</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ADFL</TT_VALUE_2>
			<TT_VALUE_3>@TT_Package.GT_STATE_ADFR</TT_VALUE_3>
			<SET_STATE_0>0 (&gt;L:#LOCAL_VAR#) #UPDATE_IDENT_VARS#</SET_STATE_0>
			<SET_STATE_1>1 (&gt;L:#LOCAL_VAR#) #UPDATE_IDENT_VARS#</SET_STATE_1>
			<SET_STATE_2>2 (&gt;L:#LOCAL_VAR#) #UPDATE_IDENT_VARS#</SET_STATE_2>
			<SET_STATE_3>3 (&gt;L:#LOCAL_VAR#) #UPDATE_IDENT_VARS#</SET_STATE_3>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#, Number)</GET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<WWISE_EVENT>transponder_knob</WWISE_EVENT>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>
				#UPDATE_IDENT_VARS#
			</UPDATE_CODE>
		</UseTemplate>
	</Template>

	<!-- HYDRAULICS -->
	<Template Name="WT_B777_Hydraulics_Switch_Template">
		<Parameters Type="Default">
			<PRESS_WARNING_THRESHOLD_PSI>2600</PRESS_WARNING_THRESHOLD_PSI>
			<NODE_ID></NODE_ID>
			<FAULT_LIGHT></FAULT_LIGHT>
		</Parameters>
		<UseTemplate Name="ASOBO_ENGINE_Switch_Hydraulic_Template">
			<EMISSIVE_DRIVES_VISIBILITY>False</EMISSIVE_DRIVES_VISIBILITY>
			<WWISE_EVENT_1>fuel_pump_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>fuel_pump_push_button_off</WWISE_EVENT_2>
			<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#FAULT_LIGHT#</NODE_ID>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<EMISSIVE_CODE>(A:HYDRAULIC PRESSURE:#ID#, psi) #PRESS_WARNING_THRESHOLD_PSI# (A:HYDRAULIC RESERVOIR PERCENT:#ID#, percent over 100) * &lt;</EMISSIVE_CODE>
		</UseTemplate>
	</Template>

	<!--todo: Line the knob to the pumps-->
	<!--LOGIC: DEMAND pumps-->
	<!--Demand L&R uses ELEC pumps, deman C1 and C2 uses AIR (make a fictional elec pumps, no idea rn)-->
	<!--on OFF, the lights will always show fault (already worked)-->
	<!--on AUTO, if (PRESS*qty < thress) => FAULT LIGHT ON and TURN ON THE PUMPS to satisfy the press (3000psi); else just keep the pumps *armed/standby for demand* -->
	<!--on ON. force the pumps to maintain the pressure all the time-->
	<Template Name="teevee_B777_Hydraulics_Elec_Knob_Template">
		<Parameters Type="Default">
			<MASTER_VARIABLE></MASTER_VARIABLE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<IE_NAME></IE_NAME>
			<FAULT_LIGHT></FAULT_LIGHT>
			<PRESS_WARNING_THRESHOLD_PSI>2600</PRESS_WARNING_THRESHOLD_PSI>
			<LOCAL_VAR></LOCAL_VAR>
		</Parameters>
		<UseTemplate Name="Asobo_Interaction_Base_Template">
			<IE_NAME>#IE_NAME#</IE_NAME>
          	<NODE_ID>#MASTER_VARIABLE#</NODE_ID>
          	<ANIM_NAME>#MASTER_VARIABLE#</ANIM_NAME>
          	<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<NUM_STATES>3</NUM_STATES>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<STR_STATE_0>Off</STR_STATE_0>
			<STR_STATE_1>Auto</STR_STATE_1>
			<STR_STATE_2>On</STR_STATE_2>
			<WWISE_EVENT>autopilot_knob</WWISE_EVENT>	<!--SOUND: can be either autopilot knob, or the same as the seatbelt knob-->
			<LOCALVAR_TO_WATCH_0>L:#MASTER_VARIABLE#</LOCALVAR_TO_WATCH_0>	<!--this is for animations-->
			<ANIM_CODE>(L:#MASTER_VARIABLE#) 2 / 100 *</ANIM_CODE>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#) sp0</GET_STATE_EXTERNAL>	<!--this is for logic-->
			<SET_STATE_0>0 (&gt;L:#LOCAL_VAR#)</SET_STATE_0>
			<SET_STATE_1>1 (&gt;L:#LOCAL_VAR#)</SET_STATE_1>
			<SET_STATE_2>2 (&gt;L:#LOCAL_VAR#)</SET_STATE_2>
			<USE_INPUT_EVENT_ID>AIRLINER</USE_INPUT_EVENT_ID>
			<INPUT_EVENT_ID_SOURCE>AIRLINER</INPUT_EVENT_ID_SOURCE>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_AUTO</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ON</TT_VALUE_2>	
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#FAULT_LIGHT#</NODE_ID>
			<EMISSIVE_CODE>(A:HYDRAULIC PRESSURE:#ID#, psi) #PRESS_WARNING_THRESHOLD_PSI# (A:HYDRAULIC RESERVOIR PERCENT:#ID#, percent over 100) * &lt; (A:HYDRAULIC SWITCH:#ID#, Bool) and (L:#LOCAL_VAR#, Number) 0 == or</EMISSIVE_CODE>
		</UseTemplate>
		<!-- test later
		<UPDATE_CIRCUIT_STATE>			
			(A:CIRCUIT SWITCH ON:#CIRCUIT_INDEX#, Bool) l0 != if{
			#CIRCUIT_INDEX# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
		</UPDATE_CIRCUIT_STATE>
		-->
	</Template>

	<!-- Anti-Ice -->

	<Template Name="WT_B777_Engine_Anti_Ice_Knob_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<ANIM_ID>0</ANIM_ID>
			<WWISE_PREFIX>deice_engine</WWISE_PREFIX>
		</Parameters>

		<Parameters Type="Default">
			<IE_NAME>Knob_Engine_#ID#</IE_NAME>
			<NODE_ID>switch_ovhd_anti_ice_nacelle_0#ID#</NODE_ID>
			<ANIM_NAME>overhead_anti_ice_switch_eng#ANIM_ID#</ANIM_NAME>
			<PART_ID>DEICE_Engine_Switches</PART_ID>
		</Parameters>

		<Parameters Type="Override">
			<VAR_NAME>B777_Engine_AntiIce_Knob_State:#ID#</VAR_NAME>
		</Parameters>
		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<INPUT_EVENT_ID_SOURCE>DEICE</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>DEICE</USE_INPUT_EVENT_ID>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>3</NUM_STATES>
			<STR_STATE_0>Off</STR_STATE_0>
			<STR_STATE_1>Auto</STR_STATE_1>
			<STR_STATE_2>On</STR_STATE_2>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_AUTO</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ON</TT_VALUE_2>
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<GET_STATE_EXTERNAL>(L:#VAR_NAME#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>(O:DEICE_#IE_NAME#_Position) (&gt;L:#VAR_NAME#)</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#VAR_NAME#</LOCAL_VAR_TO_WATCH_0>
			<TOOLTIP_TITLE>@TT_Package.DEICE_ANTI_ICE_ENGINE_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.DEICE_ANTI_ICE_ENGINE_ACTION_SET</TT_DESCRIPTION_ID>
			<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
		</UseTemplate>
		<!--since the deice function on MSFS right now is just visual (and the speed doesn't change either), so this is just for cockpit experience-->
		<!--
		<UseTemplate Name="ASOBO_GT_Update">
			<FREQUENCY>100</FREQUENCY>	
			<UPDATE_CODE>		
				(L:B777_Engine_AntiIce_Knob_State:#ID#) 1 == if{
                (A:STRUCTURAL ICE PCT, percent) 8 &gt; (A:AMBIENT TEMPERATURE, celsius) 10 &lt; or if{
						1 (&gt;L:DEICE_Engine_#ID#, bool)
					}
					else{
						0 (&gt;L:DEICE_Engine_#ID#, bool)
					}
				}
				else (L:B777_Engine_AntiIce_Knob_State:#ID#) 2 == if{
					1 (&gt;L:DEICE_Engine_#ID#, bool)
				}
				else (L:B777_Engine_AntiIce_Knob_State:#ID#) 0 == if{
					0 (&gt;L:DEICE_Engine_#ID#, bool)
				}
			</UPDATE_CODE>
		</UseTemplate>	
		-->
	</Template>

	<Template Name="WT_B777_Wing_Anti_Ice_Knob_Template">
		<Parameters Type="Default">
			<WWISE_PREFIX>deice_engine</WWISE_PREFIX>
		</Parameters>
		<Parameters Type="Default">
			<IE_NAME>Knob_Wing</IE_NAME>
			<NODE_ID>switch_ovhd_anti_ice_wing</NODE_ID>
			<ANIM_NAME>ovhd_switch_anti_ice_wing</ANIM_NAME>
			<PART_ID>DEICE_Switch_Airframe</PART_ID>
		</Parameters>

		<Parameters Type="Override">
			<VAR_NAME>B777_Wing_AntiIce_Knob_State</VAR_NAME>
		</Parameters>

		<UseTemplate Name="ASOBO_Interaction_Base_Template">
			<INPUT_EVENT_ID_SOURCE>DEICE</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>DEICE</USE_INPUT_EVENT_ID>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>3</NUM_STATES>
			<STR_STATE_0>Off</STR_STATE_0>
			<STR_STATE_1>Auto</STR_STATE_1>
			<STR_STATE_2>On</STR_STATE_2>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_AUTO</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ON</TT_VALUE_2>
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<GET_STATE_EXTERNAL>(L:#VAR_NAME#)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>(O:DEICE_#IE_NAME#_Position) (&gt;L:#VAR_NAME#)</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#VAR_NAME#</LOCAL_VAR_TO_WATCH_0>
			<TOOLTIP_TITLE>@TT_Package.DEICE_SWITCH_AIRFRAME_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.DEICE_SWITCH_AIRFRAME_ACTION_SET</TT_DESCRIPTION_ID>
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_Deice_Windshield_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<NODE_ID></NODE_ID>
			<ANIM_NAME></ANIM_NAME>
			<PART_ID>Window_Heat</PART_ID>
		</Parameters>
		<UseTemplate Name="WT_B777_Airliner_LVar_Switch_Template">
			<IE_NAME>Windshield_#ID#</IE_NAME>
			<LVAR>XMLVAR_DeiceWindshield:#ID#</LVAR>
			<WWISE_EVENT_1>deice_windshield_switch_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>deice_windshield_switch_off</WWISE_EVENT_2>
			<TOOLTIP_TITLE>@TT_Package.DEICE_SWITCH_WINDSHIELD_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.DEICE_SWITCH_WINDSHIELD_PILOT_TITLE</TT_DESCRIPTION_ID>
			<SEQ2_EMISSIVE_CODE>(L:XMLVAR_DeiceWindshield:#ID#, Bool) !</SEQ2_EMISSIVE_CODE>
		</UseTemplate>
	</Template>

	<!-- IRS -->	<!--INOP, ADIRU template defined on ADIRU.xml-->
	<Template Name="WT_B777_IRS_Knob_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>

		<Parameters Type="Default">
			<IE_NAME>IRS_Switch_#ID#</IE_NAME>
			<NODE_ID>INSTRUMENT_Knob_IRS_#ID#</NODE_ID>
			<ANIM_NAME>INSTRUMENT_Knob_IRS_#ID#</ANIM_NAME>

			<Switch Param="ID">
				<Case Value="2">
					<CIRCUIT_INDEX>98</CIRCUIT_INDEX>
				</Case>
				<Default>
					<CIRCUIT_INDEX>97</CIRCUIT_INDEX>
				</Default>
			</Switch>
		</Parameters>

		<Parameters Type="Override">
			<VAR_NAME>B777_IRS_Knob_State:#ID#</VAR_NAME>

			<UPDATE_CIRCUIT_STATE>
				(A:CIRCUIT SWITCH ON:#CIRCUIT_INDEX#, Bool) l0 != if{
					#CIRCUIT_INDEX# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
				}
			</UPDATE_CIRCUIT_STATE>
		</Parameters>

		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<PART_ID>INSTRUMENT_Knob_IRS</PART_ID>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>2</NUM_STATES>
			<STR_STATE_0>OFF</STR_STATE_0>
			<STR_STATE_1>ON</STR_STATE_1>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_ON</TT_VALUE_1>
			<ON_AFTER_INIT_CODE>(O:AIRLINER_#IE_NAME#_Position) sp0 #UPDATE_CIRCUIT_STATE#</ON_AFTER_INIT_CODE>
			<GET_STATE_EXTERNAL>(L:#VAR_NAME#) sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>(O:AIRLINER_#IE_NAME#_Position) s0 (&gt;L:#VAR_NAME#) #UPDATE_CIRCUIT_STATE#</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#VAR_NAME#</LOCAL_VAR_TO_WATCH_0>
			<WWISE_EVENT_1>engine_starter_switch_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>engine_starter_switch_off</WWISE_EVENT_2>
			<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_OVHD_KNOB_IRS_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AIRLINER_OVHD_KNOB_IRS_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="WT_ELECTRICAL_Switch_EmerLights_Template">	<!--no anim avail-->
		<Parameters Type="Default">
			<ANIM_NAME>SWITCH_OVH_EMERLIGHTS</ANIM_NAME>
			<NODE_ID>SWITCH_OVH_EMERLIGHTS</NODE_ID>
			<PART_ID>SWITCH_OVH_EMERLIGHTS</PART_ID>
			<COVER_NODE_ID>LOCK_OVH_EMERLIGHTS</COVER_NODE_ID>
			<COVER_ANIM_NAME>LOCK_OVH_EMERLIGHTS</COVER_ANIM_NAME>
			<BTN_ID>EmerLights</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_OVHD_PUSH_MISC_EMER_LIGHT_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AIRLINER_OVHD_PUSH_MISC_EMER_LIGHT_TITLE</TOOLTIP_TITLE>
		</Parameters>
		<Parameters Type="Default">
			<COVER_IE_NAME>#BTN_ID#_Cover</COVER_IE_NAME>
			<COVER_VAR_NAME>XMLVAR_ELECTRICAL_#BTN_ID#_Cover_Opened</COVER_VAR_NAME>
			<COVER_VAR_TYPE>L</COVER_VAR_TYPE>
			<COVER_INIT_VALUE>(A:ELECTRICAL MASTER BATTERY, bool) !</COVER_INIT_VALUE>
			<LOCAL_VAR>XMLVAR_EMER_LIGHTS_ARMED</LOCAL_VAR>
			<TOOLTIP_ENTRY_0>ELECTRICAL_#BTN_ID#</TOOLTIP_ENTRY_0>
			<ON_COVER_CLOSED>(&gt;B:ELECTRICAL_#BTN_ID#_ARMED)</ON_COVER_CLOSED>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Switch_Covered">
			<NUM_STATES>3</NUM_STATES>
			<INPUT_EVENT_ID>ELECTRICAL</INPUT_EVENT_ID>
			<COVER_IE_ID_SOURCE>ELECTRICAL</COVER_IE_ID_SOURCE>
			<SWITCH_NODE_ID>#NODE_ID#</SWITCH_NODE_ID>
			<SWITCH_ANIM_NAME>#ANIM_NAME#</SWITCH_ANIM_NAME>
			<CODE_POS_0>(&gt;B:ELECTRICAL_#BTN_ID#_OFF)</CODE_POS_0>
			<CODE_POS_1>(&gt;B:ELECTRICAL_#BTN_ID#_ARMED)</CODE_POS_1>
			<CODE_POS_2>(&gt;B:ELECTRICAL_#BTN_ID#_ON)</CODE_POS_2>
			<STATE0_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 0 ==</STATE0_TEST>
			<STATE1_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 1 ==</STATE1_TEST>
			<STATE2_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 2 ==</STATE2_TEST>
			<STR_STATE_0>OFF</STR_STATE_0>
			<STR_STATE_1>ARMED</STR_STATE_1>
			<STR_STATE_2>ON</STR_STATE_2>
			<TT_VALUE_0>@TT_Package.GT_STATE_OFF</TT_VALUE_0>
			<TT_VALUE_1>@TT_Package.GT_STATE_ARMED</TT_VALUE_1>
			<TT_VALUE_2>@TT_Package.GT_STATE_ON</TT_VALUE_2>
			<SET_STATE_0>0 (&gt;L:#LOCAL_VAR#)</SET_STATE_0>
			<SET_STATE_1>1 (&gt;L:#LOCAL_VAR#)</SET_STATE_1>
			<SET_STATE_2>2 (&gt;L:#LOCAL_VAR#)</SET_STATE_2>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#, Number)</GET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<WWISE_COVER_EVENT_OPEN>cover_open</WWISE_COVER_EVENT_OPEN>
			<WWISE_COVER_EVENT_CLOSE>cover_close</WWISE_COVER_EVENT_CLOSE>
			<WWISE_EVENT>light_switch</WWISE_EVENT>
		</UseTemplate>
	</Template>

	<Template Name="WT_ELECTRICAL_Switch_FlightComputer_Template">
		<Parameters Type="Default">
			<ANIM_NAME>SWITCH_OVH_PRIMFLIGHT</ANIM_NAME>
			<NODE_ID>SWITCH_OVH_PRIMFLIGHT</NODE_ID>
			<PART_ID>SWITCH_OVH_PRIMFLIGHT</PART_ID>
			<COVER_NODE_ID>LOCK_OVH_PRIMFLIGHT</COVER_NODE_ID>
			<COVER_ANIM_NAME>LOCK_OVH_PRIMFLIGHT</COVER_ANIM_NAME>
			<BTN_ID>FlightComputer</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.PRIMARY_FLIGHT_COMPUTERS_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.PRIMARY_FLIGHT_COMPUTERS_TITLE</TOOLTIP_TITLE>
		</Parameters>
		<Parameters Type="Default">
			<COVER_IE_NAME>#BTN_ID#_Cover</COVER_IE_NAME>
			<COVER_VAR_NAME>XMLVAR_ELECTRICAL_#BTN_ID#_Cover_Opened</COVER_VAR_NAME>
			<COVER_VAR_TYPE>I</COVER_VAR_TYPE>
			<COVER_INIT_VALUE>0</COVER_INIT_VALUE>
			<LOCAL_VAR>WT_777_FLIGHT_COMPUTER_AUTO</LOCAL_VAR>
			<TOOLTIP_ENTRY_0>ELECTRICAL_#BTN_ID#</TOOLTIP_ENTRY_0>
			<ON_COVER_CLOSED>(&gt;B:ELECTRICAL_#BTN_ID#_AUTO)</ON_COVER_CLOSED>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Switch_Covered">
			<NUM_STATES>2</NUM_STATES>
			<INPUT_EVENT_ID>ELECTRICAL</INPUT_EVENT_ID>
			<COVER_IE_ID_SOURCE>ELECTRICAL</COVER_IE_ID_SOURCE>
			<SWITCH_NODE_ID>#NODE_ID#</SWITCH_NODE_ID>
			<SWITCH_ANIM_NAME>#ANIM_NAME#</SWITCH_ANIM_NAME>
			<SWITCH_ANIM_CODE>(L:#LOCAL_VAR#, Number) 100 *</SWITCH_ANIM_CODE>
			<STR_STATE_OFF>DISC</STR_STATE_OFF>
			<STR_STATE_ON>AUTO</STR_STATE_ON>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_DISCONNECT)</TT_VALUE_OFF>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_AUTO)</TT_VALUE_ON>
			<SET_STATE_ON>1 (&gt;L:#LOCAL_VAR#)</SET_STATE_ON>
			<SET_STATE_OFF>0 (&gt;L:#LOCAL_VAR#)</SET_STATE_OFF>
			<GET_STATE_EXTERNAL>(L:#LOCAL_VAR#, Number) sp0</GET_STATE_EXTERNAL>
			<TOGGLE_STATE>(&gt;B:ELECTRICAL_#BTN_ID#_TOGGLE)</TOGGLE_STATE>
			<LOCAL_VAR_TO_WATCH_0>#LOCAL_VAR#</LOCAL_VAR_TO_WATCH_0>
			<WWISE_COVER_EVENT_OPEN>cover_open</WWISE_COVER_EVENT_OPEN>
			<WWISE_COVER_EVENT_CLOSE>cover_close</WWISE_COVER_EVENT_CLOSE>
			<WWISE_EVENT_1>light_switch</WWISE_EVENT_1>
			<WWISE_EVENT_2>light_switch</WWISE_EVENT_2>
		</UseTemplate>
	</Template>

	<!-- B777 Engine Throttle -->
	<!-- Ideally we would just change 'ASOBO_ENGINE_Throttle_SubTemplate' to support the new THROTTLE_VAR param,
			 but I don't want to pull in such a generic and large file into our repo as an override, so we will just do
			 this copy-paste until we can change the asobo template in perforce.
	 -->

	<!--teevee: since the original throttle from wlrs mod is working, there will be no change to this-->

	<InputEvent ID="WT_B777_Throttle_Reverser">
		<Presets>
			<Preset ID="ENGINE_Throttle_Reverser_#REVERSER_ID#">
				<Parameters Type="Default">
					<INCREMENT>256</INCREMENT>
					<ON_BEFORE_SET/>
				</Parameters>
				<Parameters Type="Override">
					<LOWER_LIMIT>(A:THROTTLE LOWER LIMIT, position 16k)</LOWER_LIMIT>
					<UPPER_LIMIT>0</UPPER_LIMIT>
				</Parameters>
				<Parameters Type="Override">
					<CAN_SET_THROTTLE>(#THROTTLE_VAR_FULL#) 0.02 &lt;</CAN_SET_THROTTLE>
					<ON_BEFORE_SET>#ON_BEFORE_SET#
						(E:IS IN VR, Boolean) (E:IS USING MOTION CONTROLLERS, Boolean) (E:IS USING JOYSTICK THROTTLE, Boolean) ! (L:XMLVAR_IE_Throttle_Reverser_VR_Handled) ! and and and if{
							1 (&gt;L:XMLVAR_IE_Throttle_Reverser_VR_Handled)
							p0 #LOWER_LIMIT# / (&gt;L:XMLVAR_IE_Throttle_Reverser_VR_Value) (&gt;B:Set_All_Throttle_Reverser)
							0 (&gt;L:XMLVAR_IE_Throttle_Reverser_VR_Handled)
							quit
						}
					</ON_BEFORE_SET>
				</Parameters>
				<Tooltip>
					<Icon>MOVE_AXIS_Y</Icon>
					<Interaction>PRIMARY_DOWN+Y_AXIS</Interaction>
					<InteractionLockable>Y_AXIS</InteractionLockable>
					<TTDescription RPN="True">#REVERSER_ID# (R:1:@TT_Package.ENGINE_THROTTLE_REVERSE) @sprintf</TTDescription>
					<TTValue RPN="True">(B:ENGINE_Throttle_Reverser_#REVERSER_ID#, percent) '%.2f%%' @sprintf</TTValue>
				</Tooltip>
				<Value>
					<Units>percent</Units>
					<Code>(O:ENGINE_Throttle_Reverser_#REVERSER_ID#_Position) #LOWER_LIMIT# / 100 *</Code>
					<Init>(#THROTTLE_VAR_FULL#, position 16k) #LOWER_LIMIT# max #UPPER_LIMIT# min (&gt;O:ENGINE_Throttle_Reverser_#REVERSER_ID#_Position)</Init>
					<WatchVars>
						<Switch Param="THROTTLE_VAR_TYPE">
							<Case Value="A">
								<Simvar ID="#THROTTLE_VAR#"/>
							</Case>
							<Default>
								<LocalVar ID="#THROTTLE_VAR#"/>
							</Default>
						</Switch>
					</WatchVars>
				</Value>
				<Inc>
					<Code>(#THROTTLE_VAR_FULL#, position 16k) p0 - #LOWER_LIMIT# max #UPPER_LIMIT# min #LOWER_LIMIT# / (&gt;B:ENGINE_Throttle_Reverser_#REVERSER_ID#_Set)</Code>
					<Parameters>
						<Param Type="Float" RPN="True">p0 #INCREMENT# *</Param>
					</Parameters>
				</Inc>
				<Dec>
					<Code>(#THROTTLE_VAR_FULL#, position 16k) p0 + #LOWER_LIMIT# max #UPPER_LIMIT# min #LOWER_LIMIT# / (&gt;B:ENGINE_Throttle_Reverser_#REVERSER_ID#_Set)</Code>
					<Parameters>
						<Param Type="Float" RPN="True">p0 #INCREMENT# *</Param>
					</Parameters>
				</Dec>
				<Set>
					<Code>#ON_BEFORE_SET# p0 #LOWER_LIMIT# max #UPPER_LIMIT# min sp0 #CAN_SET_THROTTLE# if{ l0 (&gt;K:THROTTLE#REVERSER_ID#_SET) } els{ #UPPER_LIMIT# (&gt;O:ENGINE_Throttle_Reverser_#REVERSER_ID#_Position) }</Code>
					<Parameters>
						<Param Type="Float" RPN="True">p0 #LOWER_LIMIT# *</Param>
					</Parameters>
					<Bindings>
						<Binding Alias="Set_All_Throttle_Reverser">
							<Param Type="Float" RPN="True">(L:XMLVAR_IE_Throttle_Reverser_VR_Value)</Param>
						</Binding>
						<Binding Alias="ENGINE_All_Throttle_Reverser_Full_Reverse"><!-- event manipulating all throttles (declared for each throttle preset) -->
							<Param>1</Param>
						</Binding>
						<Binding Alias="ENGINE_All_Throttle_Reverser_Idle"><!-- event manipulating all throttles (declared for each throttle preset) -->
							<Param>0</Param>
						</Binding>
						<Binding Alias="ENGINE_Throttle_Reverser_#REVERSER_ID#_Full_Reverse">
							<Param>1</Param>
						</Binding>
						<Binding Alias="ENGINE_Throttle_Reverser_#REVERSER_ID#_Idle">
							<Param>0</Param>
						</Binding>
					</Bindings>
				</Set>
			</Preset>
		</Presets>
	</InputEvent>

	<Template Name="WT_B777_Engine_Throttle_Template">		<!--INOP-->
		<Parameters Type="Default">
			<ID>1</ID>
			<ID_NODE>#ID#</ID_NODE>
			<REVERSER_LOCKOUT_DETENT>0.1</REVERSER_LOCKOUT_DETENT>
			<REVERSER_LOCKOUT_ANIM_POS>50</REVERSER_LOCKOUT_ANIM_POS>
			<MIN_TIME_HELD_BEFORE_REVERSE>0.75</MIN_TIME_HELD_BEFORE_REVERSE>
		</Parameters>
		<Parameters Type="Default">
			<NODE_ID>ENGINE_#INTERACTION_TYPE#_Throttle_#ID_NODE#</NODE_ID>
			<ANIM_NAME>ENGINE_#INTERACTION_TYPE#_Throttle_#ID_NODE#</ANIM_NAME>
			<PART_ID>ENGINE_#INTERACTION_TYPE#_Throttle</PART_ID>
			<THROTTLE_VAR_TYPE>A</THROTTLE_VAR_TYPE>
			<THROTTLE_VAR>GENERAL ENG THROTTLE LEVER POSITION:#ID#</THROTTLE_VAR>
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<RESET_LIMITS/>
					<PROCESS_LIMITS>
						(A:THROTTLE LOWER LIMIT, position 16k) (&gt;O:XMLVAR_MIN_Limit)
						16384 (&gt;O:XMLVAR_MAX_Limit)
					</PROCESS_LIMITS>
					<DRAG_AXIS_SCALE>-450</DRAG_AXIS_SCALE>
					<POSITION_TYPE>O</POSITION_TYPE>
					<POSITION_VAR>Position</POSITION_VAR>
					<DELTA_MIN>0.00025</DELTA_MIN>
					<AXIS>Y</AXIS>
					<USE_TRAJECTORY_DRAG_MODE>true</USE_TRAJECTORY_DRAG_MODE>
					<NO_ARROWS/>
					<GATE_MARGIN>256</GATE_MARGIN>
				</Case>
			</Switch>
			<TOOLTIPID>TT:COCKPIT.TOOLTIPS.THROTTLE_CONTROL</TOOLTIPID>
			<INCREMENT>163.84</INCREMENT>
			<SCROLL_INCREMENT>701</SCROLL_INCREMENT>
			<CURSOR>Hand</CURSOR>
		</Parameters>
		<Parameters Type="Override">
			<THROTTLE_VAR_FULL>#THROTTLE_VAR_TYPE#:#THROTTLE_VAR#</THROTTLE_VAR_FULL>

			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<Switch>
						<Case Check="LEVER_TYPE" Match="BOEING">
							<DRAG_MAX_VALUE>16384</DRAG_MAX_VALUE>
							<DRAG_MIN_VALUE>0</DRAG_MIN_VALUE>
						</Case>
						<Default>
							<DRAG_MAX_VALUE>16384</DRAG_MAX_VALUE>
							<DRAG_MIN_VALUE Process="Int">(A:THROTTLE LOWER LIMIT, position 16k)</DRAG_MIN_VALUE>
						</Default>
					</Switch>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Default">
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<MIN_DIFF_POS_16K>819.2</MIN_DIFF_POS_16K>
					<Condition Valid="USE_TRAJECTORY_DRAG_MODE">
						<DRAG_ANIM_NAME>#ANIM_NAME#</DRAG_ANIM_NAME>
					</Condition>
					<MAIN_LEVER_REVERSE_POSITION Process="Int">(A:THROTTLE LOWER LIMIT, position 16k)</MAIN_LEVER_REVERSE_POSITION>
					<MAIN_LEVER_REVERSE_POSITION_PCT Process="Int">(A:THROTTLE LOWER LIMIT, percent)</MAIN_LEVER_REVERSE_POSITION_PCT>
					<SNAP_DISTANCE>1</SNAP_DISTANCE>
					<DRAG_VALUE_OVERRIDE/>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<!--<THROTTLE_ANIM_CODE>(B:ENGINE_Throttle_#ID#, percent)</THROTTLE_ANIM_CODE>-->
					<MAIN_LEVER_REVERSE_POSITION>0</MAIN_LEVER_REVERSE_POSITION>
					<USE_SEPARATE_REVERSER>True</USE_SEPARATE_REVERSER>
				</Case>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Parameters Type="Default">
				<TOOLTIP_THROTTLE_TITLE>@TT_Package.ENGINE_THROTTLE_TITLE</TOOLTIP_THROTTLE_TITLE>
				<THROTTLE_ON_AFTER_SET/>
				<RIGHT_SINGLE_CODE/>
				<ENTRIES_COUNT>1</ENTRIES_COUNT>
			</Parameters>
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<Condition Check="ANIM_NAME_REVERSE_LOCK">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_CODE>
								(A:GENERAL ENG REVERSE THRUST ENGAGED:#ID#, bool) 100 *
							</ANIM_CODE>
							<ANIM_NAME>#ANIM_NAME_REVERSE_LOCK#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_2SoundEvents">
							<ANIM_NAME>#ANIM_NAME_REVERSE_LOCK#</ANIM_NAME>
							<WWISE_EVENT_1>throttle_lever_lock_on</WWISE_EVENT_1>
							<WWISE_EVENT_2>throttle_lever_lock_off</WWISE_EVENT_2>
						</UseTemplate>
					</Condition>

					<UseInputEvent ID="ENGINE">
						<THROTTLE_ID>#ID#</THROTTLE_ID>
						<GET_THROTTLE>(#THROTTLE_VAR_FULL#, position 16k)</GET_THROTTLE>
						<Condition NotEmpty="THROTTLE_ON_AFTER_SET">
							<ON_AFTER_SET>#THROTTLE_ON_AFTER_SET#</ON_AFTER_SET>
						</Condition>
						<Condition NotEmpty="THROTTLE_ON_AFTER_INC">
							<ON_AFTER_INC>#THROTTLE_ON_AFTER_INC#</ON_AFTER_INC>
						</Condition>
						<Condition NotEmpty="THROTTLE_ON_AFTER_DEC">
							<ON_AFTER_DEC>#THROTTLE_ON_AFTER_DEC#</ON_AFTER_DEC>
						</Condition>
						<RESET_LIMITS>
							#PROCESS_LIMITS#
						</RESET_LIMITS>
						<Condition Valid="CLAMP_IE">
							<CLAMP_UPPER_LIMIT>(O:XMLVAR_MAX_Limit)</CLAMP_UPPER_LIMIT>
							<CLAMP_LOWER_LIMIT>(O:XMLVAR_MIN_Limit)</CLAMP_LOWER_LIMIT>
							<ON_AFTER_INIT>#PROCESS_LIMITS#</ON_AFTER_INIT>
						</Condition>

						<!--
							This ensures that "holding" a throttle decrease key event never locks out reverse thrust range. Note that
							the key must still be held for #MIN_TIME_HELD_BEFORE_REVERSE# seconds at idle before the throttle will
							enter reverse thrust range.
						-->
						<ON_BEFORE_DEC_SET>
							1 (&gt;O:_ReverseInputsAllowed)
						</ON_BEFORE_DEC_SET>
					</UseInputEvent>

					<UseTemplate Name="ASOBO_GT_Anim_Code">
						<Condition Valid="OVERRIDE_ANIM_CODE">
							<True>
								<ANIM_CODE>#OVERRIDE_ANIM_CODE#</ANIM_CODE>
							</True>
							<False>
								<ANIM_CODE>#THROTTLE_ANIM_CODE#</ANIM_CODE>
							</False>
						</Condition>
					</UseTemplate>
					<Update Once="True">
						#RESET_LIMITS#
					</Update>
					<UseTemplate Name="ASOBO_GT_Interaction_WheelLeftDrag_Axis">
						<LOCK_CODE>
							#PROCESS_LIMITS#
						</LOCK_CODE>
						<UNLOCK_CODE>
							#RESET_LIMITS#
						</UNLOCK_CODE>
						<HELPID>HELPID_GAUGE_THROTTLE_THROTTLE</HELPID>
						<DRAG_SIMVAR>#THROTTLE_VAR_FULL#</DRAG_SIMVAR>
						<Condition Valid="USE_TRAJECTORY_DRAG_MODE">
							<True>
								<DRAG_CODE>
									(M:InputType) 1 == if{
										(O:_ResetLimitsTime) (E:SIMULATION TIME, second) &lt; if{
											(#THROTTLE_VAR_FULL#, position 16k) abs #MIN_DIFF_POS_16K# &lt; if{
												#RESET_LIMITS#
											}
										}
										(E:SIMULATION TIME, second) 0.1 + (&gt;O:_ResetLimitsTime)
									}
									16384 #MAIN_LEVER_REVERSE_POSITION# - (M:DragPercent) #ADJUST_RAW_DRAG_VALUE# * #MAIN_LEVER_REVERSE_POSITION# + sp0
									#DRAG_VALUE_OVERRIDE#
									l0 #DRAG_MAX_VALUE# min #DRAG_MIN_VALUE# max 16384 / (&gt;B:ENGINE_Throttle_#ID#_Set)
									(#THROTTLE_VAR_FULL#, position 16k) abs #MIN_DIFF_POS_16K# &gt; if{
										#PROCESS_LIMITS#
									}
								</DRAG_CODE>
							</True>
							<False>
								<DRAG_CODE>
									(#THROTTLE_VAR_FULL#, position 16k) #INCREMENT# (O:DragScale) * + #DRAG_MAX_VALUE# min #DRAG_MIN_VALUE# max 16384 / (&gt;B:ENGINE_Throttle_#ID#_Set)
									(#THROTTLE_VAR_FULL#, position 16k) abs #MIN_DIFF_POS_16K# &gt; if{
										#PROCESS_LIMITS#
									}
								</DRAG_CODE>
							</False>
						</Condition>
						<POSITIVE_AXIS_CODE>1 (&gt;B:ENGINE_Throttle_#ID#_Inc)</POSITIVE_AXIS_CODE>
						<NEGATIVE_AXIS_CODE>1 (&gt;B:ENGINE_Throttle_#ID#_Dec)</NEGATIVE_AXIS_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:XMLVAR_LeverThrottleHidden#ID#) !</VISIBILITY_CODE>
					</UseTemplate>
				</Case>
			</Switch>
		</Component>
		<Condition Check="LEVER_TYPE" Match="BOEING">
			<True>
				<Component ID="#NODE_ID_REVERSER#" Node="#NODE_ID_REVERSER#">
					<Parameters Type="Override">
						<ANIM_NAME>#ANIM_NAME_REVERSER#</ANIM_NAME>
						<DRAG_ANIM_NAME>#ANIM_NAME_REVERSER#</DRAG_ANIM_NAME>
						<DRAG_NODE_ID>#NODE_ID_REVERSER#</DRAG_NODE_ID>
						<Condition Valid="REVERSER_INVERT_IM_DRAG_INPUT_SCALAR">
							<INVERT_IM_DRAG_INPUT_SCALAR>#REVERSER_INVERT_IM_DRAG_INPUT_SCALAR#</INVERT_IM_DRAG_INPUT_SCALAR>
						</Condition>

						<REVERSE_THROTTLE_RANGE>1 #REVERSER_LOCKOUT_DETENT# -</REVERSE_THROTTLE_RANGE>
						<REVERSE_LEVER_ANIM_RANGE>100 #REVERSER_LOCKOUT_ANIM_POS# -</REVERSE_LEVER_ANIM_RANGE>
					</Parameters>
					<Parameters Type="Default">
						<TOOLTIP_THROTTLE_REVERSER_TITLE>@TT_Package.ENGINE_THROTTLE_REVERSE_TITLE</TOOLTIP_THROTTLE_REVERSER_TITLE>
					</Parameters>
					<Parameters Type="Override">
						<TOOLTIP_TITLE>#TOOLTIP_THROTTLE_REVERSER_TITLE#</TOOLTIP_TITLE>
						<TOOLTIP_ENTRY_0>ENGINE_Throttle_Reverser_#ID#</TOOLTIP_ENTRY_0>
					</Parameters>
					<UseInputEvent ID="WT_B777_Throttle_Reverser">
						<REVERSER_ID>#ID#</REVERSER_ID>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Anim_Code">
						<ANIM_CODE>
							(B:ENGINE_Throttle_Reverser_#ID#, percent over 100) sp0
							l0 0 &gt; if{
								l0 #REVERSER_LOCKOUT_DETENT# &lt; if{
									#REVERSER_LOCKOUT_ANIM_POS# sp0
								} els{
									l0 #REVERSER_LOCKOUT_DETENT# - #REVERSE_THROTTLE_RANGE# / #REVERSE_LEVER_ANIM_RANGE# * #REVERSER_LOCKOUT_ANIM_POS# + sp0
								}
							}
							l0
						</ANIM_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Interaction_WheelLeftDrag_Axis">
						<POSITION_TYPE>O</POSITION_TYPE>
						<POSITION_VAR>XMLVAR_Reverser#ID#_Position</POSITION_VAR>
						<DRAG_CODE>(M:DragPercent) (&gt;B:ENGINE_Throttle_Reverser_#ID#_Set)</DRAG_CODE>
						<POSITIVE_AXIS_CODE>1 (&gt;B:ENGINE_Throttle_Reverser_#ID#_Inc)</POSITIVE_AXIS_CODE>
						<NEGATIVE_AXIS_CODE>1 (&gt;B:ENGINE_Throttle_Reverser_#ID#_Dec)</NEGATIVE_AXIS_CODE>
					</UseTemplate>
				</Component>
			</True>
		</Condition>
		<Condition Check="HIGHLIGHT_NODE_ID">
			<UseTemplate Name="ASOBO_GT_ComponentWith_PART_ID">
				<NODE_ID>#HIGHLIGHT_NODE_ID#</NODE_ID>
			</UseTemplate>
		</Condition>
	</Template>

	<!-- Params: SCREEN_NODE_ID, BUTTON_NODE_PREFIX -->		<!--INOP FOR NOW ON 777-->
	<Template Name="WT_B777_EFB_Template">
		<Component ID="EFB_#BUTTON_NODE_PREFIX#">
			<!-- Screen emissive -->
			<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
				<NODE_ID>#SCREEN_NODE_ID#</NODE_ID>
				<EMISSIVE_CODE>(A:GLASSCOCKPIT AUTOMATIC BRIGHTNESS, Percent over 100)</EMISSIVE_CODE>
				<FAILURE>(A:CIRCUIT ON:100, Bool)</FAILURE>
			</UseTemplate>

			<!-- Buttons -->
			<Loop>
				<Setup>
					<Param>BUTTON_ID</Param>
					<From>1</From>
					<To>16</To>
					<Inc>1</Inc>
				</Setup>
				<Do>
					<Component ID="EFB_#BUTTON_NODE_PREFIX#_LSK_#BUTTON_ID#" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_#BUTTON_ID#">
						<UseTemplate Name="ASOBO_GT_Push_Button">
							<!-- TODO: Need "HUD symbology" tooltip -->
							<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
							<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
							<LEFT_SINGLE_CODE>(&gt;H:WT777_EFB_#BUTTON_NODE_PREFIX#_LSK_#BUTTON_ID#)</LEFT_SINGLE_CODE>
						</UseTemplate>
					</Component>
				</Do>
			</Loop>

			<!-- PWR key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_PWR">
				<UseTemplate Name="WT_B777_Airliner_LVar_Switch_Template">
					<ID>1</ID>
					<NODE_ID>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</NODE_ID>
					<ANIM_NAME>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</ANIM_NAME>
					<PART_ID>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</PART_ID>
					<IE_NAME>EFB_PWR_#BUTTON_NODE_PREFIX#</IE_NAME>
					<LVAR>WT_EFB_POWER</LVAR>
					<WWISE_EVENT_1>fpv_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>fpv_push_button_off</WWISE_EVENT_2>
					<TOOLTIP_TITLE>@TT_Package.AS510_SWITCH_POWER_TITLE</TOOLTIP_TITLE>
					<TT_DESCRIPTION>@TT_Package.ELECTRICAL_SWITCH_AVIONICS_DISPLAY_ACTION</TT_DESCRIPTION>
					<IS_MOMENTARY>True</IS_MOMENTARY>
				</UseTemplate>
			</Component>

			<!-- MENU key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_MENU" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_menu">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
					<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
					<LEFT_SINGLE_CODE>(&gt;H:WT777_EFB_#BUTTON_NODE_PREFIX#_MENU)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>

			<!-- BACK key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_BACK" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_back">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
					<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
					<LEFT_SINGLE_CODE>(&gt;H:WT777_EFB_#BUTTON_NODE_PREFIX#_BACK)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
		</Component>
	</Template>

	<Template Name="WT_BOEING_Knob_Mins_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<Parameters Type="Default">
			<NODE_ID></NODE_ID>
			<ANIM_NAME></ANIM_NAME>
			<BUTTON_NODE_ID></BUTTON_NODE_ID>
			<BUTTON_ANIM_NAME></BUTTON_ANIM_NAME>
			<SYSTEM_NAME>PFD</SYSTEM_NAME>
			<WWISE_EVENT>autopilot_mins_knob</WWISE_EVENT>
			<WWISE_PREFIX>autopilot_mins_knob</WWISE_PREFIX>
			<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_KNOB_BARO_KNOB_MINS_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AIRLINER_KNOB_BARO_KNOB_MINS_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID_BUTTON>@TT_Package.AIRLINER_KNOB_BARO_PUSH_MINS_ACTION</TT_DESCRIPTION_ID_BUTTON>
			<TOOLTIP_TITLE_BUTTON>@TT_Package.AIRLINER_KNOB_BARO_PUSH_MINS_TITLE</TOOLTIP_TITLE_BUTTON>
		</Parameters>
		<Parameters Type="Override">
			<IE_NAME_KNOB>Mins_#ID#</IE_NAME_KNOB>
			<IE_NAME_BTN>Mins_Button_#ID#</IE_NAME_BTN>
		</Parameters>
		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<IE_NAME>#IE_NAME_KNOB#</IE_NAME>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#PLANE_PREFIX#_#SYSTEM_NAME#_Mins_INC) } els{ (&gt;H:#PLANE_PREFIX#_#SYSTEM_NAME#_Mins_DEC) }</SET_STATE_EXTERNAL>
			<IS_INFINITE>True</IS_INFINITE>
			<COUNT>36</COUNT>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<INTERACTION_TYPE>Push</INTERACTION_TYPE>
			<IE_NAME>#IE_NAME_BTN#</IE_NAME>
			<SET_STATE_EXTERNAL>if{ (&gt;H:#PLANE_PREFIX#_#SYSTEM_NAME#_Mins_Press) }</SET_STATE_EXTERNAL>
			<ANIM_NAME>#BUTTON_ANIM_NAME#</ANIM_NAME>
			<NODE_ID>#BUTTON_NODE_ID#</NODE_ID>
			<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BUTTON#</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>#TOOLTIP_TITLE_BUTTON#</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="WT_HANDLING_FbwElevatorTrim_Template">		<!--INOP-->
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<Parameters Type="Default">
			<IE_ELEVATOR_TRIM>#ID#</IE_ELEVATOR_TRIM>
		</Parameters>
		<Parameters Type="Override">
			<ELEVATOR_TRIM_ID>#IE_ELEVATOR_TRIM#</ELEVATOR_TRIM_ID>
		</Parameters>
		<Parameters Type="Default">
			<NODE_ID>HANDLING_Switch_ElevatorTrim_#ID#</NODE_ID>
			<ANIM_NAME>HANDLING_Switch_ElevatorTrim_#ID#</ANIM_NAME>
			<PART_ID>HANDLING_Switch_Elevator_Trim</PART_ID>
			<OTHER_PART_ID>HANDLING_Switch_ElevatorTrim</OTHER_PART_ID>
			<WWISE_EVENT>elevator_switch</WWISE_EVENT>
			<COUNT>2</COUNT>
			<ANIMREF_ID>-1</ANIMREF_ID>
			<ANIMTIP_0_ON_CURSOR>UpArrow</ANIMTIP_0_ON_CURSOR>
			<ANIMTIP_1_ON_CURSOR>DownArrow</ANIMTIP_1_ON_CURSOR>
			<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.MET_PITCH_TRIM_DN</ANIMTIP_0>
			<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.MET_PITCH_TRIM_UP</ANIMTIP_1>
			<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
			<SWITCH_POSITION_VAR>XMLVAR_ElevatorTrim_Switch_#IE_ELEVATOR_TRIM#</SWITCH_POSITION_VAR>
			<SWITCH_POSITION_TYPE_TIMER>L</SWITCH_POSITION_TYPE_TIMER>
			<SWITCH_POSITION_VAR_TIMER>XMLVAR_ElevatorTrim_#IE_ELEVATOR_TRIM#_SwitchStateTimer</SWITCH_POSITION_VAR_TIMER>
			<TOOLTIP_ELEVATOR_TRIM_TITLE>@TT_Package.HANDLING_SWITCH_YOKE_ELEVATORTRIM_TITLE</TOOLTIP_ELEVATOR_TRIM_TITLE>
		</Parameters>
		<Parameters Type="Override">
			<INTERACTION_TYPE>SWITCH</INTERACTION_TYPE>
			<TOOLTIP_TITLE>#TOOLTIP_ELEVATOR_TRIM_TITLE#</TOOLTIP_TITLE>
			<TOOLTIP_ENTRY_0>B777_HANDLING_FbwElevatorTrim_#IE_ELEVATOR_TRIM#</TOOLTIP_ENTRY_0>
			<SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
		</Parameters>
		<!-- from ASOBO_HANDLING_Trim_Variable_Speed_Base_Template -->
		<Parameters Type="Default">
			<UPDATE_FREQ>10</UPDATE_FREQ><!-- How many updates per second -->
			<UPDATE_COUNT_BEFORE_REPEAT>5</UPDATE_COUNT_BEFORE_REPEAT>
			<MOMENTARY_MIN_DURATION>0.1</MOMENTARY_MIN_DURATION>
			<ADDITIONAL_TESTS/>
			<SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
			<COUNT>2</COUNT>
			<ELECTRICAL_POWER>False</ELECTRICAL_POWER>
			<ELECTRICAL_POWER_VAR_NAME>XMLVAR_Electrical_Trim_Disabled</ELECTRICAL_POWER_VAR_NAME>
			<ELECTRICAL_POWER_VAR_TYPE>L</ELECTRICAL_POWER_VAR_TYPE>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="ELECTRICAL_POWER">
				<True>
					<ADDITIONAL_TESTS>#ADDITIONAL_TESTS# (#ELECTRICAL_POWER_VAR_TYPE#:#ELECTRICAL_POWER_VAR_NAME#) ! and</ADDITIONAL_TESTS>
				</True>
			</Condition>
		</Parameters>
		<Parameters Type="Override">
			<STATE0_TEST>(O:_TrimDelta) 0 &gt;</STATE0_TEST>
			<STATE1_TEST>(O:_TrimDelta) 0 ==</STATE1_TEST>
			<STATE2_TEST>(O:_TrimDelta) 0 &lt;</STATE2_TEST>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INC_STATE>0</INC_STATE>
				<DEC_STATE>2</DEC_STATE>
				<CODE_POS_0>
					1 (&gt;O:_TrimDelta)
					1 #ADDITIONAL_TESTS# if{
						(&gt;K:ELEV_TRIM_DN)
					}
				</CODE_POS_0>
				<CODE_POS_1>
					0 (&gt;O:_TrimDelta)
					0 (&gt;O:_UPDATE_Count)
				</CODE_POS_1>
				<CODE_POS_2>
					-1 (&gt;O:_TrimDelta)
					1 #ADDITIONAL_TESTS# if{
						(&gt;K:ELEV_TRIM_UP)
					}
				</CODE_POS_2>
				<STATE_MAX_TIMER>#MOMENTARY_MIN_DURATION#</STATE_MAX_TIMER>
				<STATE0_TIMER>#MOMENTARY_MIN_DURATION#</STATE0_TIMER>
			</Parameters>
			<UseInputEvent ID="B777_HANDLING"/>	<!--no event on 777-->
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>#UPDATE_FREQ#</FREQUENCY>
				<UPDATE_CODE>
					(O:_TrimDelta) 0 != #ADDITIONAL_TESTS# if{
						(O:_UPDATE_Count) #UPDATE_COUNT_BEFORE_REPEAT# &gt;= if{
							(O:_TrimDelta) 0 &gt; if{
								(&gt;K:ELEV_TRIM_DN)
							} els{
								(&gt;K:ELEV_TRIM_UP)
							}
						}
						(O:_UPDATE_Count) 1 + (&gt;O:_UPDATE_Count)
					}
				</UPDATE_CODE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Switch_3States">
				<MOMENTARY_SWITCH/>
			</UseTemplate>
		</Component>
	</Template>

  <!-- AIR DATA/ATT Source Select -->
	<Template Name="WT_B777_Air_Data_Att_Source_Knob_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<WWISE_PREFIX>standbypower_selector</WWISE_PREFIX>
		</Parameters>

		<Parameters Type="Default">
			<Switch Param="ID">
				<Case Value="2">
					<SIDE>copilot</SIDE>
				</Case>
				<Default>
					<SIDE>pilot</SIDE>
				</Default>
			</Switch>
		</Parameters>

		<Parameters Type="Default">
			<IE_NAME>Air_Data_Att_Source_Switch_#ID#</IE_NAME>
			<NODE_ID>knob_airData_#SIDE#</NODE_ID>
			<ANIM_NAME>knob_airData_#SIDE#</ANIM_NAME>
		</Parameters>

		<Parameters Type="Override">
			<VAR_NAME>B777_Air_Data_Att_Source_Knob_State:#ID#</VAR_NAME>
		</Parameters>

		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<NUM_STATES>2</NUM_STATES>
			<STR_STATE_OFF>Auto</STR_STATE_OFF>
			<STR_STATE_ON>Altn</STR_STATE_ON>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_AUTO)</TT_VALUE_OFF>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_ALTERNATE)</TT_VALUE_ON>
			<GET_STATE_EXTERNAL>(L:#VAR_NAME#) sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>(O:AIRLINER_#IE_NAME#_Position) (&gt;L:#VAR_NAME#)</SET_STATE_EXTERNAL>
			<LOCAL_VAR_TO_WATCH_0>#VAR_NAME#</LOCAL_VAR_TO_WATCH_0>
			<TOOLTIP_TITLE>@TT_Package.AIRLINER_KNOB_SWITCHING2_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_KNOB_ND_ACTION_MODE</TT_DESCRIPTION_ID>
		</UseTemplate>
	</Template>

	<Template Name="WT_B777_Stby_Baro_Knob_Template">
		<Parameters Type="Default">
      <ID>3</ID>
			<BARO_ID>2</BARO_ID>
			<NODE_ID>AUTOPILOT_Knob_Baro_Backup</NODE_ID>
			<ANIM_NAME>AUTOPILOT_Knob_Baro</ANIM_NAME>
      <PART_ID>AUTOPILOT_Knob_Baro</PART_ID>
    </Parameters>

    <Parameters Type="Default">
      <KNOB_ID>Baro_#ID#</KNOB_ID>
      <BTN_ID_EXTERNAL>Baro_#ID#_Sync</BTN_ID_EXTERNAL>
      <INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
      <WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
      <WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
      <COUNT>36</COUNT>
      <ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
      <ANIM_NAME_PUSH>AUTOPILOT_Knob_Baro_#ID#_push_#ID#</ANIM_NAME_PUSH>
      <THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
      <THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
      <THRESHOLD_INPUT>0.05</THRESHOLD_INPUT>
      <THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
      <WWISE_EVENT>autopilot_knob</WWISE_EVENT>
    </Parameters>

    <Parameters Type="Default">
      <SET_STATE_EXTERNAL>p0 0 &gt; if{ #BARO_ID# (&gt;K:KOHLSMAN_INC) } els{ #BARO_ID# (&gt;K:KOHLSMAN_DEC) }</SET_STATE_EXTERNAL>
      <PUSH_SET_STATE_EXTERNAL>#BARO_ID# (&gt;K:BAROMETRIC_STD_PRESSURE)</PUSH_SET_STATE_EXTERNAL>
      <GET_BARO>(A:KOHLSMAN SETTING HG:#BARO_ID#, inHg)</GET_BARO>
    </Parameters>

    <Component ID="#NODE_ID#" Node="#NODE_ID#">
      <UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
        <BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
        <EVENT_TYPE>PUSH</EVENT_TYPE>
        <SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
        <TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_BARO_ACTION_SET</TT_DESCRIPTION_ID>
      </UseTemplate>
      <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
        <SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
        <TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_BARO_ACTION</TT_DESCRIPTION_ID>
        <TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_BARO_TITLE</TOOLTIP_TITLE>
        <GET_TT_VALUE_STATE>#GET_BARO# sp0</GET_TT_VALUE_STATE>
        <FORMAT_VALUE>l0 '%.2fIN' @sprintf</FORMAT_VALUE>
      </UseTemplate>
    </Component>
  </Template>

  <Template Name="teevee_AUTOPILOT_Knob_Altitude_Template">
		<Parameters Type="Override">
			<Condition Check="PUSH">
				<TYPE>PUSH</TYPE>
			</Condition>
		</Parameters>
		<Parameters Type="Default">
			<ID>1</ID>
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<PART_ID>AUTOPILOT_Knob_Altitude</PART_ID>
			<Condition Check="INCREMENT">
				<False>
					<Condition Check="INCREMENT">
						<False>
							<INCREMENT_VAR>XMLVAR_Autopilot_Altitude_Increment</INCREMENT_VAR>
						</False>
					</Condition>
					<INCREMENT>(L:XMLVAR_Autopilot_Altitude_Increment)</INCREMENT>
					<SET_INCREMENT>(&gt;L:XMLVAR_Autopilot_Altitude_Increment)</SET_INCREMENT>
					<DYN_INCREMENT_INIT>100</DYN_INCREMENT_INIT>
					<NODE_ID>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</ANIM_NAME>
					<WWISE_EVENT>autopilot_altitude_knob</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
					<THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
				</False>
			</Condition>

			<Switch Param="TYPE">
				<Case Value="AS01B">
					<HEADING_INDEX>3</HEADING_INDEX>
				</Case>
				<Default>
					<HEADING_INDEX>0</HEADING_INDEX>
				</Default>
			</Switch>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<Switch Param="ALT_PUSH_TYPE">
				<Case Value="ALT_FINE_TUNE">
					<FINE_TUNE_INCREMENT>100</FINE_TUNE_INCREMENT>		
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<Condition Check="INCREMENT_IN_KNOB_ID">
				<True>
					<KNOB_ID>Altitude_#INCREMENT#</KNOB_ID>
				</True>
				<False>
					<KNOB_ID>Altitude</KNOB_ID>
				</False>
			</Condition>
			<Switch Param="TYPE">
				<Case Value="AS01B">
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) } els{ (&gt;H:AP_KNOB_Down) }
					</SET_STATE_EXTERNAL>
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<BTN_ID_EXTERNAL>Altitude_Sync</BTN_ID_EXTERNAL>
					<BTN_SET_STATE_EXTERNAL>(&gt;H:B777_FMC_1_AP_ALT_INTERVENTION)</BTN_SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_PUSH</TT_DESCRIPTION_ID_BTN>				
				</Case>
				<Default>
					<SET_STATE_EXTERNAL>
						1 -1 p0 0 &gt; ? sp0
						#HEADING_INDEX# (A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) #INCREMENT# l0 * + (&gt;K:2:AP_ALT_VAR_SET_ENGLISH)
						p0 0 &gt; if{ (&gt;H:AP_KNOB_Up) } els{ (&gt;H:AP_KNOB_Down) }
					</SET_STATE_EXTERNAL>
				</Default>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Condition Valid="IS_DYN_INCREMENT">
				<UseTemplate Name="ASOBO_GT_Update">
					<UPDATE_ONCE>True</UPDATE_ONCE>
					<UPDATE_CODE>#DYN_INCREMENT_INIT# #SET_INCREMENT#</UPDATE_CODE>
				</UseTemplate>
			</Condition>
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BTN#</TT_DESCRIPTION_ID>
						<Condition NotEmpty="BTN_VALUE_CODE">
							<VALUE_CODE>#BTN_VALUE_CODE#</VALUE_CODE>
							<TT_VALUE>#BTN_VALUE_CODE# if{ #BTN_TT_VALUE_ON# } els{ #BTN_TT_VALUE_OFF# }</TT_VALUE>
							<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
						</Condition>
						<Condition NotEmpty="BTN_LOCAL_VAR_TO_WATCH_0">
							<LOCAL_VAR_TO_WATCH_0>#BTN_LOCAL_VAR_TO_WATCH_0#</LOCAL_VAR_TO_WATCH_0>
						</Condition>
					</UseTemplate>
					<Condition NotEmpty="PUSH_ANIM_HANDLED_SEPARATELY">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_CODE>#BTN_ANIM_CODE#</ANIM_CODE>
							<ANIM_NAME>#ANIM_NAME_PUSH#</ANIM_NAME>
							<ANIM_LAG>100</ANIM_LAG>
						</UseTemplate>
					</Condition>
				</Case>
			</Switch>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<BINDING_INC_0>Inc_Event</BINDING_INC_0>
				<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
				<BINDING_INC_0_EVENT_ID>AP_ALT_VAR_INC</BINDING_INC_0_EVENT_ID>
				<BINDING_INC_0_EVENT_ID_ONLY>True</BINDING_INC_0_EVENT_ID_ONLY>
				<BINDING_DEC_0>Dec_Event</BINDING_DEC_0>
				<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
				<BINDING_DEC_0_EVENT_ID>AP_ALT_VAR_DEC</BINDING_DEC_0_EVENT_ID>
				<BINDING_DEC_0_EVENT_ID_ONLY>True</BINDING_DEC_0_EVENT_ID_ONLY>
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_ADJUST</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_TITLE</TOOLTIP_TITLE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT ALTITUDE LOCK VAR:#HEADING_INDEX#, feet) sp0</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>l0 '%d ft' @sprintf</FORMAT_VALUE>
			</UseTemplate>
			<Condition Check="EMISSIVE_KNOB">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
			</Condition>
		</Component>
	</Template>

	<Template Name="teevee_AUTOPILOT_AutoThrottle_Arm_Template">
		<Parameters Type="Default">
			<BTN_ID>AutoThrottle_Arm</BTN_ID>
			<Switch Param="ID">
				<Case Value="1">
					<NODE_ID>switch_autopilot_at_arm</NODE_ID>
					<ANIM_NAME>autopilot_switch_at_arm</ANIM_NAME>
				</Case>
				<Default>
					<NODE_ID>switch_autopilot_at_arm_#ID#</NODE_ID>
					<ANIM_NAME>autopilot_switch_at_arm</ANIM_NAME>
				</Default>
			</Switch>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SET_STATE_EXTERNAL>(&gt;K:AUTO_THROTTLE_ARM)</SET_STATE_EXTERNAL>
			<ANIM_CODE>(A:AUTOPILOT THROTTLE ARM, Bool) 100 *</ANIM_CODE>
			<TT_DESCRIPTION_ID>COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_AUTOTHROTTLE_OFF</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_AUTOTHROTTLE_TITLE</TOOLTIP_TITLE>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_OFF)</TT_VALUE_OFF>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_ARMED)</TT_VALUE_ON>
			<NO_TEXT_EMISSIVE>True</NO_TEXT_EMISSIVE>
			<NO_INDICATOR>True</NO_INDICATOR>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
          <NODE_ID>btn_autopilot_spd_seq2</NODE_ID>
          <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
          <EMISSIVE_CODE>(L:CJ4_THR_ACTIVE, bool) 1 ==</EMISSIVE_CODE>
        </UseTemplate>
	</Template>

	<!-- Params: SCREEN_NODE_ID, BUTTON_NODE_PREFIX -->
	<Template Name="WT_B787_EFB_Template">
		<Component ID="EFB_#BUTTON_NODE_PREFIX#">
			<!-- Screen emissive -->
			<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
				<NODE_ID>#SCREEN_NODE_ID#</NODE_ID>
				<EMISSIVE_CODE>(A:GLASSCOCKPIT AUTOMATIC BRIGHTNESS, Percent over 100)</EMISSIVE_CODE>
				<FAILURE>(A:CIRCUIT ON:97, Bool)</FAILURE>
			</UseTemplate>

			<!-- Buttons -->
			<Loop>
				<Setup>
					<Param>BUTTON_ID</Param>
					<From>1</From>
					<To>16</To>
					<Inc>1</Inc>
				</Setup>
				<Do>
					<Component ID="EFB_#BUTTON_NODE_PREFIX#_LSK_#BUTTON_ID#" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_#BUTTON_ID#">
						<UseTemplate Name="ASOBO_GT_Push_Button">
							<!-- TODO: Need "HUD symbology" tooltip -->
							<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
							<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
							<LEFT_SINGLE_CODE>(&gt;H:WT787_EFB_#BUTTON_NODE_PREFIX#_LSK_#BUTTON_ID#)</LEFT_SINGLE_CODE>
						</UseTemplate>
					</Component>
				</Do>
			</Loop>

			<!-- PWR key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_PWR">
				<UseTemplate Name="WT_B78_Airliner_LVar_Switch_Template">
					<ID>1</ID>
					<NODE_ID>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</NODE_ID>
					<ANIM_NAME>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</ANIM_NAME>
					<PART_ID>Btn_touchpad_#BUTTON_NODE_PREFIX#_pwr</PART_ID>
					<IE_NAME>EFB_PWR_#BUTTON_NODE_PREFIX#</IE_NAME>
					<LVAR>WT_EFB_POWER</LVAR>
					<WWISE_EVENT_1>fpv_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>fpv_push_button_off</WWISE_EVENT_2>
					<TOOLTIP_TITLE>@TT_Package.AS510_SWITCH_POWER_TITLE</TOOLTIP_TITLE>
					<TT_DESCRIPTION>@TT_Package.ELECTRICAL_SWITCH_AVIONICS_DISPLAY_ACTION</TT_DESCRIPTION>
					<IS_MOMENTARY>True</IS_MOMENTARY>
				</UseTemplate>
			</Component>

			<!-- MENU key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_MENU" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_menu">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
					<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
					<LEFT_SINGLE_CODE>(&gt;H:WT787_EFB_#BUTTON_NODE_PREFIX#_MENU)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>

			<!-- BACK key -->
			<Component ID="EFB_#BUTTON_NODE_PREFIX#_BACK" Node="Btn_touchpad_#BUTTON_NODE_PREFIX#_back">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<TOOLTIP_TITLE>@TT_Package.HUD_SWITCH_DAY_NIGHT_TITLE</TOOLTIP_TITLE>
					<!-- <TOOLTIP_ENTRY_0>#IE_NAME_FULL#</TOOLTIP_ENTRY_0> -->
					<LEFT_SINGLE_CODE>(&gt;H:WT787_EFB_#BUTTON_NODE_PREFIX#_BACK)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
		</Component>
	</Template>

</ModelBehaviors>